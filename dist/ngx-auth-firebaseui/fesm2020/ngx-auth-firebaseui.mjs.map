{"version":3,"file":"ngx-auth-firebaseui.mjs","sources":["../../../projects/ngx-auth-firebaseui/src/lib/enums/accounts.enum.ts","../../../projects/ngx-auth-firebaseui/src/lib/tokens/index.ts","../../../projects/ngx-auth-firebaseui/src/lib/services/firestore-sync.service.ts","../../../projects/ngx-auth-firebaseui/src/lib/services/auth-process.service.ts","../../../projects/ngx-auth-firebaseui/src/lib/components/email-confirmation/email-confirmation.component.html","../../../projects/ngx-auth-firebaseui/src/lib/components/email-confirmation/email-confirmation.component.ts","../../../projects/ngx-auth-firebaseui/src/lib/components/legality-dialog/legality-dialog.component.html","../../../projects/ngx-auth-firebaseui/src/lib/components/legality-dialog/legality-dialog.component.ts","../../../projects/ngx-auth-firebaseui/src/lib/animations/index.ts","../../../projects/ngx-auth-firebaseui/src/lib/components/ngx-auth-firebaseui/auth.component.html","../../../projects/ngx-auth-firebaseui/src/lib/components/ngx-auth-firebaseui/auth.component.ts","../../../projects/ngx-auth-firebaseui/src/lib/components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component.html","../../../projects/ngx-auth-firebaseui/src/lib/components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component.ts","../../../projects/ngx-auth-firebaseui/src/lib/components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component.html","../../../projects/ngx-auth-firebaseui/src/lib/components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component.ts","../../../projects/ngx-auth-firebaseui/src/lib/components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component.html","../../../projects/ngx-auth-firebaseui/src/lib/components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component.ts","../../../projects/ngx-auth-firebaseui/src/lib/components/ngx-auth-firebaseui-user/user.component.html","../../../projects/ngx-auth-firebaseui/src/lib/components/ngx-auth-firebaseui-user/user.component.ts","../../../projects/ngx-auth-firebaseui/src/lib/components/providers/auth.providers.component.html","../../../projects/ngx-auth-firebaseui/src/lib/components/providers/auth.providers.component.ts","../../../projects/ngx-auth-firebaseui/src/lib/interfaces/config.interface.ts","../../../projects/ngx-auth-firebaseui/src/lib/guards/logged-in.guard.ts","../../../projects/ngx-auth-firebaseui/src/lib/ngx-auth-firebaseui.module.ts","../../../projects/ngx-auth-firebaseui/src/public-api.ts","../../../projects/ngx-auth-firebaseui/src/ngx-auth-firebaseui.ts"],"sourcesContent":["export enum Accounts {\n  NONE = 'account',\n  CHECK = 'account-check',\n  EDIT = 'account-edit',\n  OFF = 'account-off',\n  REMOVE = 'account-remove',\n}\n","// This token is the official token containing the final configuration; ie. the merge between default and user provided configurations\nimport {InjectionToken} from '@angular/core';\nimport {NgxAuthFirebaseUIConfig} from '../interfaces';\n\nexport const NgxAuthFirebaseUIConfigToken = new InjectionToken<NgxAuthFirebaseUIConfig>('NgxAuthFirebaseUIConfigToken');\n// This is an intermediate token containing only user-provided configuration\nexport const UserProvidedConfigToken = new InjectionToken<NgxAuthFirebaseUIConfig>('UserProvidedConfigToken');\n","import { Injectable } from \"@angular/core\";\nimport {\n  AngularFirestore,\n  AngularFirestoreDocument,\n} from \"@angular/fire/compat/firestore\";\nimport firebase from \"firebase/compat/app\";\n\nexport const collections = {\n  users: \"users\",\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FirestoreSyncService {\n  constructor(public afs: AngularFirestore) {\n    // this.afs.firestore.settings({timestampsInSnapshots: true});\n  }\n\n  // get timestamp() {\n  //     return firebase.firestore.FieldValue.serverTimestamp();\n  // }\n\n  public getUserDocRefByUID(\n    uid: string\n  ): AngularFirestoreDocument<firebase.UserInfo> {\n    return this.afs.doc(`${collections.users}/${uid}`);\n  }\n\n  public deleteUserData(uid: string): Promise<any> {\n    const userRef: AngularFirestoreDocument<firebase.UserInfo> = this.getUserDocRefByUID(\n      uid\n    );\n    return userRef.delete();\n  }\n\n  public updateUserData(user: firebase.UserInfo): Promise<any> {\n    // Sets user$ data to firestore on login\n    const userRef: AngularFirestoreDocument<firebase.UserInfo> = this.getUserDocRefByUID(\n      user.uid\n    );\n    const data: firebase.UserInfo = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      phoneNumber: user.phoneNumber,\n      providerId: user.providerId,\n    };\n    return userRef.set(data, { merge: true });\n  }\n}\n","import '@firebase/auth';\n\nimport { EventEmitter, forwardRef, Inject, Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport firebase from 'firebase/compat/app';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Accounts } from '../enums';\nimport { ICredentials, ISignInProcess, ISignUpProcess, NgxAuthFirebaseUIConfig } from '../interfaces';\nimport { NgxAuthFirebaseUIConfigToken } from '../tokens';\nimport { FirestoreSyncService } from './firestore-sync.service';\n\nimport UserCredential = firebase.auth.UserCredential;\n\nexport const facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nexport const appleAuthProvider = new firebase.auth.OAuthProvider(\"apple.com\");\nexport const twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\nexport const githubAuthProvider = new firebase.auth.GithubAuthProvider();\nexport const microsoftAuthProvider = new firebase.auth.OAuthProvider(\n  \"microsoft.com\"\n);\nexport const yahooAuthProvider = new firebase.auth.OAuthProvider(\"yahoo.com\");\n\nexport enum AuthProvider {\n  ALL = \"all\",\n  ANONYMOUS = \"anonymous\",\n  EmailAndPassword = \"firebase\",\n  Google = \"google\",\n  Apple = \"apple\",\n  Facebook = \"facebook\",\n  Twitter = \"twitter\",\n  Github = \"github\",\n  Microsoft = \"microsoft\",\n  Yahoo = \"yahoo\",\n  PhoneNumber = \"phoneNumber\",\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthProcessService implements ISignInProcess, ISignUpProcess {\n  onSuccessEmitter: EventEmitter<any> = new EventEmitter<any>();\n  onErrorEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  // Useful to know about auth state even between reloads.\n  // Replace emailConfirmationSent and emailToConfirm.\n  private _user$ = new BehaviorSubject<firebase.User | null>(null);\n  get user$(): Observable<firebase.User | null> {\n    return this._user$.asObservable();\n  }\n\n  /**\n   * @deprecated access via user$ asynchronously instead\n   */\n  user: firebase.User;\n\n  messageOnAuthSuccess: string;\n  messageOnAuthError: string;\n\n  // Legacy field that is set to true after sign up.\n  // Value is lost in case of reload. The idea here is to know if we just sent a verification email.\n  emailConfirmationSent: boolean;\n  // Legacy filed that contain the mail to confirm. Same lifecycle than emailConfirmationSent.\n  emailToConfirm: string;\n\n  constructor(\n    public afa: AngularFireAuth,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken))\n    public config: NgxAuthFirebaseUIConfig,\n    private snackBar: MatSnackBar,\n    private fireStoreService: FirestoreSyncService,\n    @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS)\n    private matSnackBarConfig: MatSnackBarConfig\n  ) {}\n\n  listenToUserEvents() {\n    this.afa.user.subscribe((user: firebase.User | null) => {\n      this._user$.next(user);\n      this.user = user;\n    });\n  }\n\n  /**\n   * Reset the password of the ngx-auth-firebaseui-user via email\n   *\n   * @param email - the email to reset\n   */\n  public async resetPassword(email: string): Promise<void> {\n    try {\n      console.log(\"Password reset email sent\");\n      return await this.afa.sendPasswordResetEmail(email);\n    } catch (error) {\n      return this.notifyError(error);\n    }\n  }\n\n  /**\n   * General sign in mechanism to authenticate the users with a firebase project\n   * using a traditional way, via username and password or by using an authentication provider\n   * like google, facebook, twitter and github\n   *\n   * @param provider - the provider to authenticate with (google, facebook, twitter, github)\n   * @param credentials optional email and password\n   */\n  public async signInWith(provider: AuthProvider, credentials?: ICredentials) {\n    try {\n      let signInResult: UserCredential | any;\n\n      switch (provider) {\n        case AuthProvider.ANONYMOUS:\n          signInResult = (await this.afa.signInAnonymously()) as UserCredential;\n          break;\n\n        case AuthProvider.EmailAndPassword:\n          signInResult = (await this.afa.signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n          )) as UserCredential;\n          break;\n\n        case AuthProvider.Google:\n          signInResult = (await this.afa.signInWithPopup(\n            googleAuthProvider\n          )) as UserCredential;\n          break;\n\n        case AuthProvider.Apple:\n          signInResult = (await this.afa.signInWithPopup(\n            appleAuthProvider\n          )) as UserCredential;\n          break;\n\n        case AuthProvider.Facebook:\n          signInResult = (await this.afa.signInWithPopup(\n            facebookAuthProvider\n          )) as UserCredential;\n          break;\n\n        case AuthProvider.Twitter:\n          signInResult = (await this.afa.signInWithPopup(\n            twitterAuthProvider\n          )) as UserCredential;\n          break;\n\n        case AuthProvider.Github:\n          signInResult = (await this.afa.signInWithPopup(\n            githubAuthProvider\n          )) as UserCredential;\n          break;\n\n        case AuthProvider.Microsoft:\n          signInResult = (await this.afa.signInWithPopup(\n            microsoftAuthProvider\n          )) as UserCredential;\n          break;\n\n        case AuthProvider.Yahoo:\n          signInResult = (await this.afa.signInWithPopup(\n            yahooAuthProvider\n          )) as UserCredential;\n          break;\n\n        case AuthProvider.PhoneNumber:\n          // coming soon - see feature/sms branch\n          break;\n\n        default:\n          throw new Error(\n            `${AuthProvider[provider]} is not available as auth provider`\n          );\n      }\n      await this.handleSuccess(signInResult);\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  /**\n   * Sign up new users via email and password.\n   * After that the ngx-auth-firebaseui-user should verify and confirm an email sent via the firebase\n   *\n   * @param displayName - the displayName if the new ngx-auth-firebaseui-user\n   * @param credentials email and password\n   * @returns -\n   */\n  public async signUp(displayName: string, credentials: ICredentials) {\n    try {\n      const userCredential: UserCredential = await this.afa.createUserWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n      );\n      const user = userCredential.user;\n      await this.updateProfile(displayName, user.photoURL);\n\n      if (this.config.enableFirestoreSync) {\n        await this.fireStoreService.getUserDocRefByUID(user.uid).set({\n          uid: user.uid,\n          displayName,\n          email: user.email,\n          photoURL: user.photoURL,\n        } as firebase.User);\n      }\n\n      if (this.config.enableEmailVerification) {\n        await user.sendEmailVerification();\n      }\n\n      // Legacy fields\n      this.emailConfirmationSent = true;\n      this.emailToConfirm = credentials.email;\n\n      await this.handleSuccess(userCredential);\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  async sendNewVerificationEmail(): Promise<void | never> {\n    if (!this.user) {\n      return Promise.reject(new Error(\"No signed in user\"));\n    }\n    return this.user.sendEmailVerification();\n  }\n\n  async signOut() {\n    try {\n      await this.afa.signOut();\n    } catch (error) {\n      this.notifyError(error);\n    }\n  }\n\n  /**\n   * Update the profile (name + photo url) of the authenticated ngx-auth-firebaseui-user in the\n   * firebase authentication feature (not in firestore)\n   *\n   * @param name - the new name of the authenticated ngx-auth-firebaseui-user\n   * @param photoURL - the new photo url of the authenticated ngx-auth-firebaseui-user\n   * @returns -\n   */\n  public updateProfile(name: string, photoURL: string): Promise<void> {\n    return this.afa.currentUser.then((user: firebase.User) => {\n      if (!photoURL) {\n        return user.updateProfile({ displayName: name });\n      } else {\n        return user.updateProfile({ displayName: name, photoURL });\n      }\n    });\n  }\n\n  public parseUserInfo(user: firebase.User): firebase.UserInfo {\n    return {\n      uid: user.uid,\n      displayName: user.displayName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      photoURL: user.photoURL,\n      providerId:\n        user.providerData.length > 0 ? user.providerData[0].providerId : null,\n    };\n  }\n\n  public getUserPhotoUrl(): Observable<string | null> {\n    return this._user$.pipe(\n      map((user: firebase.User | null) => {\n        if (!user) {\n          return null;\n        } else if (user.photoURL) {\n          return user.photoURL;\n        } else if (user.emailVerified) {\n          return this.getPhotoPath(Accounts.CHECK);\n        } else if (user.isAnonymous) {\n          return this.getPhotoPath(Accounts.OFF);\n        } else {\n          return this.getPhotoPath(Accounts.NONE);\n        }\n      })\n    );\n  }\n\n  public getPhotoPath(image: string): string {\n    return `assets/user/${image}.svg`;\n  }\n\n  public signInWithPhoneNumber() {\n    // todo: 3.1.18\n  }\n\n  async handleSuccess(userCredential: UserCredential) {\n\n    if(this.config.useRawUserCredential) {\n      this.onSuccessEmitter.next(userCredential);\n    } else {\n      this.onSuccessEmitter.next(userCredential.user);\n    }\n\n    if (this.config.enableFirestoreSync) {\n      try {\n        await this.fireStoreService.updateUserData(\n          this.parseUserInfo(userCredential.user)\n        );\n      } catch (e) {\n        console.error(\n          `Error occurred while updating user data with firestore: ${e}`\n        );\n      }\n    }\n    if (this.config.toastMessageOnAuthSuccess) {\n      const fallbackMessage = `Hello ${\n        userCredential.user.displayName ? userCredential.user.displayName : \"\"\n      }!`;\n      this.showToast(this.messageOnAuthSuccess || fallbackMessage);\n    }\n  }\n\n  handleError(error: any) {\n    this.notifyError(error);\n    console.error(error);\n  }\n\n  // Refresh user info. Can be useful for instance to get latest status regarding email verification.\n  reloadUserInfo() {\n    return this._user$\n      .pipe(take(1))\n      .subscribe((user: firebase.User | null) => user && user.reload());\n  }\n\n  // Search for an error message.\n  // Consumers of this library are given the possibility to provide a\n  // function in case they want to instrument message based on error properties.\n  getMessageOnAuthError(error: any) {\n    // eslint-disable-next-line no-bitwise\n    return (\n      error.toString() || \"Sorry, something went wrong. Please retry later.\"\n    );\n  }\n\n  // Show a toast using current snackbar config. If message is empty, no toast is displayed allowing to opt-out when needed.\n  // Default MatSnackBarConfig has no duration, meaning it stays visible forever.\n  // If that's the case, an action button is added to allow the end-user to dismiss the toast.\n  showToast(message: string) {\n    if (message) {\n      this.snackBar.open(\n        message,\n        this.matSnackBarConfig.duration ? null : \"OK\"\n      );\n    }\n  }\n\n  showErrorToast(error: any) {\n    if (this.config.toastMessageOnAuthError) {\n      this.showToast(this.getMessageOnAuthError(error));\n    }\n  }\n\n  notifyError(error: any) {\n    this.onErrorEmitter.emit(error);\n    this.showErrorToast(error);\n  }\n}\n","<ng-container *ngTemplateOutlet=\"verifyEmailTemplate; context: verifyEmailContext\"></ng-container>\n<ng-template #defaultVerifyEmail let-email=\"email\" let-goBackURL=\"goBackURL\"\n             let-sendNewVerificationEmailText=\"sendNewVerificationEmailText\"\n             let-signOutText=\"signOutText\"\n             let-verifyEmailConfirmationText=\"verifyEmailConfirmationText\" let-verifyEmailGoBackText=\"verifyEmailGoBackText\"\n             let-verifyEmailTitleText=\"verifyEmailTitleText\">\n  <mat-card class=\"verify-email\">\n    <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <mat-icon>email</mat-icon>\n      <p class=\"title\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <span class=\"mat-subheading-2\">{{ verifyEmailTitleText }}</span>\n        <span class=\"mat-body-2\">{{ email }}</span>\n      </p>\n      <p class=\"subtitle\">{{ verifyEmailConfirmationText }}</p>\n      <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n    </mat-card-content>\n    <mat-card-actions fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <button (click)=\"continue()\" *ngIf=\"goBackURL\" class=\"go-back-button action-button\" mat-stroked-button>\n        {{ verifyEmailGoBackText }}\n      </button>\n      <button (click)=\"sendNewVerificationEmail()\" class=\"send-new-mail-button action-button\"\n              mat-stroked-button>{{ sendNewVerificationEmailText }}</button>\n      <button (click)=\"this.signOut.emit()\" class=\"sign-out-button action-button\" color=\"warn\"\n              mat-stroked-button>{{ signOutText }}</button>\n    </mat-card-actions>\n  </mat-card>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthProcessService} from '../../services/auth-process.service';\n\ninterface VerifyEmailContext {\n  email: string;\n  goBackURL: string;\n  verifyEmailTitleText: string;\n  verifyEmailConfirmationText: string;\n  verifyEmailGoBackText: string;\n  messageOnEmailConfirmationSuccess: string;\n  messageOnError: string;\n}\n\nconst defaultTranslations = {\n  verifyEmailTitleText: 'Confirm your e-mail address!',\n  verifyEmailConfirmationText: 'A confirmation e-mail has been sent.' +\n    ' Check your inbox and click on the link \"Confirm my e-mail\" to confirm your e-mail address.',\n  verifyEmailGoBackText: 'Go back',\n  sendNewVerificationEmailText: 'Send new confirmation e-mail',\n  signOutText: 'Sign out',\n  messageOnEmailConfirmationSuccess: 'A new confirmation e-mail has been sent. Please check your inbox.',\n};\n\n@Component({\n  selector: 'ngx-auth-firebaseui-email-confirmation',\n  templateUrl: './email-confirmation.component.html',\n  styleUrls: ['./email-confirmation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EmailConfirmationComponent implements OnInit, OnChanges {\n\n  @Input() email: string;\n  @Input() goBackURL: string;\n  // i18n translations to use in default template\n  @Input() verifyEmailTitleText: string;\n  @Input() verifyEmailConfirmationText: string;\n  @Input() verifyEmailGoBackText: string;\n  @Input() sendNewVerificationEmailText: string;\n  @Input() signOutText: string;\n  @Input() messageOnEmailConfirmationSuccess: string;\n\n  // Template to use in place of default template\n  @Input() template: TemplateRef<any>;\n\n  @Output() signOut = new EventEmitter();\n\n  // Final template\n  verifyEmailTemplate: TemplateRef<any>;\n  // Context hash to use for verifyEmailTemplate.\n  verifyEmailContext: VerifyEmailContext;\n\n  isLoading: boolean;\n\n  @ViewChild('defaultVerifyEmail', {static: true}) defaultTemplate: TemplateRef<any>;\n\n  constructor(public authProcess: AuthProcessService, private router: Router, private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.verifyEmailTemplate && changes.verifyEmailTemplate.currentValue == null) {\n      this.verifyEmailTemplate = this.defaultTemplate;\n      console.log('ngOnChanges - defaultTemplate:', this.verifyEmailTemplate);\n    }\n    this.verifyEmailContext = this.createTemplateContext();\n  }\n\n  ngOnInit(): void {\n    if (!this.verifyEmailTemplate) {\n      console.log('ngOnInit - defaultTemplate');\n      this.verifyEmailTemplate = this.defaultTemplate;\n    }\n    this.verifyEmailContext = this.createTemplateContext();\n    console.log('verifyEmailTemplate:', this.verifyEmailTemplate);\n    console.log('verifyEmailContext:', this.verifyEmailContext);\n  }\n\n  async continue() {\n    try {\n      await this.authProcess.reloadUserInfo();\n      await this.router.navigate([this.goBackURL]);\n    } catch (error) {\n      this.authProcess.notifyError(error);\n    }\n  }\n\n  async sendNewVerificationEmail() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.sendNewVerificationEmail();\n      this.authProcess.showToast(this.verifyEmailContext.messageOnEmailConfirmationSuccess);\n    } catch (error) {\n      this.authProcess.notifyError(error);\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  private createTemplateContext(): any {\n    return {\n      email: this.email,\n      goBackURL: this.goBackURL,\n      verifyEmailTitleText: this.verifyEmailTitleText || defaultTranslations.verifyEmailTitleText,\n      verifyEmailConfirmationText: this.verifyEmailConfirmationText || defaultTranslations.verifyEmailConfirmationText,\n      verifyEmailGoBackText: this.verifyEmailGoBackText || defaultTranslations.verifyEmailGoBackText,\n      sendNewVerificationEmailText: this.sendNewVerificationEmailText || defaultTranslations.sendNewVerificationEmailText,\n      signOutText: this.signOutText || defaultTranslations.signOutText,\n      messageOnEmailConfirmationSuccess: this.messageOnEmailConfirmationSuccess || defaultTranslations.messageOnEmailConfirmationSuccess\n    };\n  }\n}\n","<h1 matDialogTitle>Legal requirements</h1>\n\n<mat-dialog-content>\n  <div fxLayout=\"column\" fxLayoutAlign=\"start\">\n    <mat-checkbox *ngIf=\"this.data.tosUrl\" [(ngModel)]=\"checkTOS\">\n      I agree to the\n      <span>&nbsp;</span>\n      <a [href]=\"this.data.tosUrl\"\n         target=\"_blank\">\n        Terms of Service and Conditions\n      </a>\n    </mat-checkbox>\n\n    <mat-checkbox *ngIf=\"this.data.privacyPolicyUrl\"\n                  [(ngModel)]=\"checkPrivacyPolicy\">\n      I have read and agree to the\n      <span>&nbsp;</span>\n      <a [href]=\"this.data.privacyPolicyUrl\"\n         target=\"_blank\">\n        Privacy\n      </a>\n    </mat-checkbox>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button color=\"warn\"\n          id=\"decline-action\"\n          mat-raised-button\n          matDialogClose>Decline\n  </button>\n  <button (click)=\"closeDialog()\"\n          [disabled]=\"disableConfirmActionButton\"\n          color=\"primary\"\n          id=\"confirm-action\"\n          mat-raised-button>Confirm\n  </button>\n</mat-dialog-actions>\n\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LegalityDialogParams, LegalityDialogResult} from '../../interfaces';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-legality-dialog',\n  templateUrl: './legality-dialog.component.html',\n  styleUrls: ['./legality-dialog.component.scss']\n})\nexport class LegalityDialogComponent {\n\n  checkTOS: boolean;\n  checkPrivacyPolicy: boolean;\n\n  constructor(public dialogRef: MatDialogRef<LegalityDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: LegalityDialogParams) {\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match\n  private _disableConfirmActionButton = false;\n\n  get disableConfirmActionButton(): boolean {\n    if (this.data.tosUrl && this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !(this.checkTOS && this.checkPrivacyPolicy);\n    } else if (this.data.tosUrl && !this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !this.checkTOS;\n    } else if (!this.data.tosUrl && this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !this.checkPrivacyPolicy;\n    }\n    return this._disableConfirmActionButton;\n  }\n\n  closeDialog() {\n    const result: LegalityDialogResult = {\n      checked: !this.disableConfirmActionButton,\n      authProvider: this.data.authProvider\n    };\n    this.dialogRef.close(result);\n  }\n\n}\n","import {animate, animateChild, animation, query, stagger, state, style, transition, trigger, useAnimation} from '@angular/animations';\n\nconst customAnimation = animation(\n  [\n    style({\n      opacity: '{{opacity}}',\n      transform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})'\n    }),\n    animate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*'))\n  ],\n  {\n    params: {\n      duration: '200ms',\n      delay: '0ms',\n      opacity: '0',\n      scale: '1',\n      x: '0',\n      y: '0',\n      z: '0'\n    }\n  }\n);\n\nexport const NgxAuthFirebaseuiAnimations = [\n  trigger('animate', [transition('void => *', [useAnimation(customAnimation)])]),\n\n  trigger('animateStagger', [\n    state('50', style('*')),\n    state('100', style('*')),\n    state('200', style('*')),\n\n    transition('void => 50', query('@*', [stagger('50ms', [animateChild()])], {optional: true})),\n    transition('void => 100', query('@*', [stagger('100ms', [animateChild()])], {optional: true})),\n    transition('void => 200', query('@*', [stagger('200ms', [animateChild()])], {optional: true}))\n  ]),\n];\n","<ng-container *ngIf=\"authProcess.user$ | async as user; else showForm\">\n\n  <!-- This component will be shown when:\n    - we just sent a verification mail (notably after sign up)\n    - we arrived from the guard after trying to access a protected route even though we are connected\n    - config.enableEmailVerification is undefined, null or true\n  -->\n  <div\n    *ngIf=\"(config.enableEmailVerification !== false) && (\n     (config.guardProtectedRoutesUntilEmailIsVerified && !user.emailVerified) || (authProcess.emailConfirmationSent && !user.emailVerified)\n     ); else signedInUser\"\n    fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <ngx-auth-firebaseui-email-confirmation\n      (signOut)=\"signOut()\"\n      [email]=\"user.email\"\n      [goBackURL]=\"goBackURL\"\n      [messageOnEmailConfirmationSuccess]=\"messageOnEmailConfirmationSuccess\"\n      [sendNewVerificationEmailText]=\"sendNewVerificationEmailText\"\n      [signOutText]=\"signOutText\"\n      [template]=\"verifyEmailTemplate\"\n      [verifyEmailConfirmationText]=\"verifyEmailConfirmationText\"\n      [verifyEmailGoBackText]=\"verifyEmailGoBackText\"\n      [verifyEmailTitleText]=\"verifyEmailTitleText\">\n    </ngx-auth-firebaseui-email-confirmation>\n  </div>\n\n  <ng-template #signedInUser>\n    <div class=\"signed-in-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <img *ngIf=\"user?.photoURL; else noPhoto\" [src]=\"user?.photoURL\" class=\"account-circle\">\n      <ng-template #noPhoto>\n        <mat-icon class=\"account-circle\">account_circle</mat-icon>\n      </ng-template>\n      <div class=\"user-display-name mat-title\">{{ user?.displayName }}</div>\n      <div class=\"user-email mat-body-2\">{{ user?.email }}</div>\n      <div class=\"actions\">\n        <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n        <a *ngIf=\"verifyEmailGoBackText\" [routerLink]=\"goBackURL\" class=\"go-back-button action-button\" color=\"primary\"\n           mat-stroked-button>{{ verifyEmailGoBackText }}</a>\n        <button (click)=\"signOut()\" class=\"sign-out-button action-button\" color=\"warn\"\n                mat-stroked-button>{{ signOutText }}</button>\n      </div>\n    </div>\n  </ng-template>\n\n</ng-container>\n\n<ng-template #showForm>\n  <mat-tab-group (selectedTabChange)=\"onTabChange($event)\" [color]=\"color\" [selectedIndex]=\"tabIndex\">\n    <!--Sign in tab-->\n    <mat-tab [label]=\"signInTabText\">\n      <mat-card>\n        <mat-card-title>{{signInCardTitleText}}</mat-card-title>\n        <mat-card-content>\n          <form (ngSubmit)=\"signIn()\"\n                [@animateStagger]=\"{ value: '50' }\"\n                [formGroup]=\"signInFormGroup\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center\">\n              <mat-form-field [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                              [appearance]=\"appearance\">\n                <mat-label>{{emailText}}</mat-label>\n                <input formControlName=\"email\"\n                       matInput\n                       required\n                       autocomplete=\"username\">\n                <mat-icon [color]=\"color\" matSuffix>email</mat-icon>\n                <mat-error *ngIf=\"signInEmailFormControl.hasError('required')\">\n                  {{emailErrorRequiredText}}\n                </mat-error>\n                <mat-error *ngIf=\"signInEmailFormControl.hasError('pattern')\">\n                  {{emailErrorPatternText}}\n                </mat-error>\n              </mat-form-field>\n\n              <mat-form-field [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                              [appearance]=\"appearance\">\n                <mat-label>{{passwordText}}</mat-label>\n                <input [maxlength]=\"max\" [minlength]=\"min\" [type]=\"togglePass?.type\" formControlName=\"password\"\n                       autocomplete=\"current-password\" matInput\n                       required/>\n                <mat-pass-toggle-visibility #togglePass matSuffix></mat-pass-toggle-visibility>\n                <mat-icon [color]=\"color\" matSuffix>lock</mat-icon>\n                <mat-hint align=\"end\" aria-live=\"polite\"> {{ signInFormGroup.value.password.length }}\n                  / {{ max }} </mat-hint>\n                <mat-error *ngIf=\"sigInPasswordFormControl.hasError('required')\">\n                  {{passwordErrorRequiredText}}\n                </mat-error>\n                <mat-error *ngIf=\"sigInPasswordFormControl.hasError('minlength')\">\n                  {{ passwordErrorMinLengthText }}\n                </mat-error>\n                <mat-error *ngIf=\"sigInPasswordFormControl.hasError('maxlength')\">\n                  {{ passwordErrorMaxLengthText }}\n                </mat-error>\n              </mat-form-field>\n\n              <button [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                      [color]=\"color\"\n                      [disabled]=\"signInFormGroup.invalid\"\n                      class=\"space-top\"\n                      mat-raised-button\n                      style=\"margin-top: 20px\"\n                      type=\"submit\">\n                {{loginButtonText}}\n              </button>\n\n            </div>\n          </form>\n\n          <div fxLayoutAlign=\"center\">\n            <button (click)=\"createForgotPasswordTab()\"\n                    *ngIf=\"resetPasswordEnabled\"\n                    [@animate]=\"{ value: '*', params: { x: '-50px' } }\"\n                    [color]=\"color\"\n                    class=\"space-top\"\n                    mat-button>\n              {{forgotPasswordButtonText}}\n            </button>\n          </div>\n\n        </mat-card-content>\n        <mat-card-footer *ngIf=\"isLoading\">\n          <mat-progress-bar [@animate]=\"{ value: '*', params: { z: '50px', delay: '50ms', scale: '0.2' } }\"\n                            mode=\"indeterminate\"></mat-progress-bar>\n        </mat-card-footer>\n      </mat-card>\n    </mat-tab>\n\n    <!--tab register-->\n    <mat-tab *ngIf=\"registrationEnabled\" [label]=\"registerTabText\">\n      <mat-card>\n        <mat-card-title>{{registerCardTitleText}}</mat-card-title>\n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\n          <form (ngSubmit)=\"signUpFormGroup.valid &&\n            processLegalSignUP(authProvider.EmailAndPassword)\"\n                [@animateStagger]=\"{ value: '50' }\" [formGroup]=\"signUpFormGroup\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center\">\n              <!--name-->\n              <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                              [appearance]=\"appearance\">\n                <!--labels will work only with @angular/material@6.2.0 -->\n                <mat-label>{{nameText}}</mat-label>\n                <input\n                  [formControl]=\"sigUpNameFormControl\"\n                  [maxlength]=\"config.nameMaxLength\"\n                  [minlength]=\"config.nameMinLength\"\n                  matInput\n                  required\n                />\n                <mat-icon [color]=\"color\" matSuffix>person</mat-icon>\n                <mat-hint align=\"end\" aria-live=\"polite\"> {{ signUpFormGroup.value.name?.length }}\n                  / {{ config.nameMaxLength }} </mat-hint>\n                <mat-error *ngIf=\"sigUpNameFormControl.hasError('required')\">\n                  {{nameErrorRequiredText}}\n                </mat-error>\n                <mat-error *ngIf=\"sigUpNameFormControl.hasError('minlength')\">\n                  {{nameErrorMinLengthText}}\n                </mat-error>\n                <mat-error *ngIf=\"sigUpNameFormControl.hasError('maxlength')\">\n                  {{nameErrorMaxLengthText}}\n                </mat-error>\n              </mat-form-field>\n\n              <!--email-->\n              <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                              [appearance]=\"appearance\">\n                <mat-label>{{emailText}}</mat-label>\n                <input [formControl]=\"sigUpEmailFormControl\"\n                       matInput\n                       required\n                       type=\"email\"\n                       autocomplete=\"username\">\n                <mat-icon [color]=\"color\" matSuffix>email</mat-icon>\n                <mat-error *ngIf=\"sigUpEmailFormControl.hasError('required')\">\n                  {{emailErrorRequiredText}}\n                </mat-error>\n                <mat-error *ngIf=\"sigUpEmailFormControl.hasError('pattern')\">\n                  {{emailErrorPatternText}}\n                </mat-error>\n              </mat-form-field>\n\n              <!--password-->\n              <div fxLayout=\"column\">\n                <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                                [appearance]=\"appearance\">\n                  <mat-label>{{passwordText}}</mat-label>\n                  <input\n                    [formControl]=\"sigUpPasswordFormControl\"\n                    [maxlength]=\"max\"\n                    [minlength]=\"min\"\n                    [type]=\"toggle.type\"\n                    matInput\n                    name=\"password\"\n                    autocomplete=\"new-password\"\n                    required\n                  />\n                  <mat-pass-toggle-visibility #toggle matSuffix></mat-pass-toggle-visibility>\n\n                  <mat-icon [color]=\"color\" matSuffix>lock</mat-icon>\n\n                  <mat-hint align=\"end\" aria-live=\"polite\">\n                    {{signUpFormGroup.value.password?.length}} / {{ max }}\n                  </mat-hint>\n\n                  <mat-error *ngIf=\"sigUpPasswordFormControl.hasError('required')\" class=\"cut-text\">\n                    {{passwordErrorRequiredText}}\n                  </mat-error>\n\n                  <mat-error *ngIf=\"sigUpPasswordFormControl.hasError('minlength')\" class=\"cut-text\">\n                    {{ passwordErrorMinLengthText }}\n                  </mat-error>\n                  <mat-error *ngIf=\"sigUpPasswordFormControl.hasError('maxlength')\" class=\"cut-text\">\n                    {{ passwordErrorMaxLengthText }}\n                  </mat-error>\n\n                </mat-form-field>\n\n                <mat-password-strength #passwordStrength\n                                       [customValidator]=\"customValidator\"\n                                       [enableDigitRule]=\"enableDigitRule\"\n                                       [enableLengthRule]=\"enableLengthRule\"\n                                       [enableLowerCaseLetterRule]=\"enableLowerCaseLetterRule\"\n                                       [enableSpecialCharRule]=\"enableSpecialCharRule\"\n                                       [enableUpperCaseLetterRule]=\"enableUpperCaseLetterRule\"\n                                       [externalError]=\"sigUpPasswordFormControl.dirty\"\n                                       [max]=\"max\"\n                                       [min]=\"min\"\n                                       [password]=\"signUpFormGroup.value.password\">\n                </mat-password-strength>\n\n              </div>\n\n              <button [@animate]=\"{ value: '*', params: { x: '100px' } }\"\n                      [color]=\"color\"\n                      [disabled]=\"signUpFormGroup.invalid\"\n                      mat-raised-button\n                      style=\"margin-top: 20px\"\n                      type=\"submit\">\n                {{registerButtonText}}\n              </button>\n\n            </div>\n          </form>\n\n          <button (click)=\"processLegalSignUP(authProvider.ANONYMOUS)\"\n                  *ngIf=\"guestEnabled\"\n                  [@animate]=\"{ value: '*', params: { x: '-100px' } }\"\n                  [color]=\"color\"\n                  mat-button\n                  style=\"margin-top: 20px\">\n            <mat-icon>fingerprint</mat-icon>\n            {{guestButtonText}}\n          </button>\n\n        </mat-card-content>\n\n        <mat-card-footer *ngIf=\"isLoading\">\n          <mat-progress-bar [@animate]=\"{ value: '*', params: { z: '50px', delay: '50ms', scale: '0.2' } }\"\n                            mode=\"indeterminate\"></mat-progress-bar>\n        </mat-card-footer>\n\n      </mat-card>\n    </mat-tab>\n\n    <!--Reset password tab-->\n    <mat-tab *ngIf=\"passwordResetWished\" class=\"reset-password-tab\">\n      <ng-template mat-tab-label>\n        <button (click)=\"passwordResetWished = false\" class=\"reset-password-tab__close-button\" mat-icon-button>\n          {{ resetPasswordTabText }}\n          <mat-icon>close</mat-icon>\n        </button>\n      </ng-template>\n      <form (ngSubmit)=\"resetPasswordFormGroup.valid && resetPassword()\"\n            [@animateStagger]=\"{ value: '50' }\"\n            [formGroup]=\"resetPasswordFormGroup\">\n        <mat-card class=\"reset-password-card\">\n          <mat-card-content>\n            <mat-form-field [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\" [appearance]=\"appearance\"\n                            class=\"full-width\">\n              <mat-label> {{ resetPasswordInputText }} </mat-label>\n              <input [title]=\"resetPasswordInputText\"\n                     formControlName=\"email\"\n                     matInput\n                     required>\n              <mat-icon [color]=\"color\" matSuffix>email</mat-icon>\n              <mat-error *ngIf=\"resetPasswordEmailFormControl.hasError('required')\">\n                {{resetPasswordErrorRequiredText}}\n              </mat-error>\n              <mat-error *ngIf=\"resetPasswordEmailFormControl.hasError('pattern')\">\n                {{resetPasswordErrorPatternText}}\n              </mat-error>\n            </mat-form-field>\n            <p *ngIf=\"passReset\">{{resetPasswordInstructionsText}}</p>\n          </mat-card-content>\n          <mat-card-actions fxLayoutAlign=\"center\">\n            <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n            <button [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                    [color]=\"color\"\n                    mat-raised-button\n                    type=\"submit\">\n              {{resetPasswordActionButtonText}}\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </form>\n    </mat-tab>\n\n  </mat-tab-group>\n  <mat-divider></mat-divider>\n  <ngx-auth-firebaseui-providers *ngIf=\"tabIndex !== 2\"\n                                 [providers]=\"providers\"\n                                 [theme]=\"providersTheme\"\n                                 [tosUrl]=\"tosUrl\"\n                                 [privacyPolicyUrl]=\"privacyPolicyUrl\">\n  </ngx-auth-firebaseui-providers>\n</ng-template>\n","import { isPlatformBrowser } from \"@angular/common\";\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n} from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\n\n// ANGULAR MATERIAL\nimport { MatTabChangeEvent, MatTabGroup } from \"@angular/material/tabs\";\nimport { ThemePalette } from \"@angular/material/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { MatFormFieldAppearance } from \"@angular/material/form-field\";\n\n// ANGULAR FIRE\nimport { AngularFireAuth } from \"@angular/fire/compat/auth\";\n\n// Third PARTY\nimport { MatPasswordStrengthComponent } from \"@angular-material-extensions/password-strength\";\n\n// RXJS\nimport { Subscription } from \"rxjs\";\n\nimport { LegalityDialogComponent, Theme } from \"..\";\nimport {\n  LegalityDialogParams,\n  LegalityDialogResult,\n  NgxAuthFirebaseUIConfig,\n} from \"../../interfaces\";\nimport {\n  AuthProcessService,\n  AuthProvider,\n} from \"../../services/auth-process.service\";\nimport { NgxAuthFirebaseuiAnimations } from \"../../animations\";\nimport { NgxAuthFirebaseUIConfigToken } from \"../../tokens\";\n\nexport const EMAIL_REGEX = new RegExp(\n  [\n    '^(([^<>()[\\\\]\\\\.,;:\\\\s@\"]+(\\\\.[^<>()\\\\[\\\\]\\\\.,;:\\\\s@\"]+)*)',\n    '|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.',\n    \"[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+\",\n    \"[a-zA-Z]{2,}))$\",\n  ].join(\"\")\n);\n\n// eslint-disable-next-line max-len\nexport const PHONE_NUMBER_REGEX = new RegExp(\n  [\n    \"^[+]{0,1}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\.]{0,1}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]{4,12}$\",\n  ].join(\"\")\n);\n\n@Component({\n  selector: \"ngx-auth-firebaseui\",\n  templateUrl: \"auth.component.html\",\n  styleUrls: [\"auth.component.scss\"],\n  animations: NgxAuthFirebaseuiAnimations,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthComponent\n  implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  @ViewChild(MatTabGroup, { static: false }) matTabGroup: MatTabGroup;\n  @ViewChild(MatPasswordStrengthComponent, { static: false })\n  passwordStrength: MatPasswordStrengthComponent;\n\n  isLoading: boolean;\n  //  google, facebook, twitter, github as array or all as one single string\n  @Input() providers: AuthProvider[] | AuthProvider = AuthProvider.ALL;\n  @Input() providersTheme: Theme; // Classic, Stroked, etc.\n\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() tabIndex: number | null;\n  @Input() registrationEnabled = true;\n  @Input() resetPasswordEnabled = true;\n  @Input() guestEnabled = true;\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n  @Input() goBackURL: string;\n  @Input() messageOnAuthSuccess: string;\n  @Input() messageOnAuthError: string;\n  @Input() messageOnEmailConfirmationSuccess: string;\n\n  // Events\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onSuccess: any;\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onError: any;\n  @Output() selectedTabChange: EventEmitter<\n    MatTabChangeEvent\n  > = new EventEmitter();\n\n  // Password strength api\n  @Input() enableLengthRule = true;\n  @Input() enableLowerCaseLetterRule = true;\n  @Input() enableUpperCaseLetterRule = true;\n  @Input() enableDigitRule = true;\n  @Input() enableSpecialCharRule = true;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() customValidator: RegExp;\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onStrengthChanged: EventEmitter<number> = new EventEmitter();\n\n  // Verify email template to use in place of default template.\n  // See email-confirmation component\n  @Input() verifyEmailTemplate: TemplateRef<any>;\n\n  // i18n translations to use in default template for email verification.\n  // See email-confirmation component\n  @Input() verifyEmailTitleText: string;\n  @Input() verifyEmailConfirmationText: string;\n  @Input() verifyEmailGoBackText: string;\n  @Input() sendNewVerificationEmailText: string;\n  @Input() signOutText = \"Sign out\";\n\n  // Customize the text\n  // Reset Password Tab\n  @Input() resetPasswordTabText = \"Reset e-mail address to password\";\n  @Input() resetPasswordInputText = \"Reset e-mail address to password\";\n  @Input() resetPasswordErrorRequiredText =\n    \"E-mail is required to reset the password!\";\n  @Input() resetPasswordErrorPatternText =\n    \"Please enter a valid e-mail address\";\n  @Input() resetPasswordActionButtonText = \"Reset\";\n  @Input() resetPasswordInstructionsText =\n    \"Reset requested. Check your e-mail instructions.\";\n\n  // SignIn Tab\n  @Input() signInTabText = \"Sign in\";\n  @Input() signInCardTitleText = \"Signing in\";\n  @Input() loginButtonText = \"Log In\";\n  @Input() forgotPasswordButtonText = \"Forgot Password ?\";\n\n  // Common\n  @Input() nameText = \"Name\";\n  @Input() nameErrorRequiredText = \"Name is required\";\n  @Input() nameErrorMinLengthText = \"The name is too short!\";\n  @Input() nameErrorMaxLengthText = \"The name is too long!\";\n\n  @Input() emailText = \"E-mail\";\n  @Input() emailErrorRequiredText = \"E-mail is required\";\n  @Input() emailErrorPatternText = \"Please enter a valid e-mail address\";\n\n  @Input() passwordText = \"Password\";\n  @Input() passwordErrorRequiredText = \"Password is required\";\n  @Input() passwordErrorMinLengthText = \"The password is too short!\";\n  @Input() passwordErrorMaxLengthText = \"The password is too long!\";\n\n  // Register Tab\n  @Input() registerTabText = \"Register\";\n  @Input() registerCardTitleText = \"Registration\";\n  @Input() registerButtonText = \"Register\";\n  @Input() guestButtonText = \"continue as guest\";\n\n  // email confirmation component\n  @Input() emailConfirmationTitle = \"Confirm your e-mail address!\";\n  // eslint-disable-next-line max-len\n  @Input()\n  emailConfirmationText = `A confirmation e-mail has been sent to you. Check your inbox and click on the link \"Confirm my e-mail\" to confirm your e-mail address.`;\n\n  authProvider = AuthProvider;\n  passwordResetWished: boolean;\n\n  public signInFormGroup: FormGroup;\n  public signUpFormGroup: FormGroup;\n  public resetPasswordFormGroup: FormGroup;\n\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  passReset = false;\n  dialogRef: MatDialogRef<LegalityDialogComponent>;\n\n  authProviders = AuthProvider;\n\n  signInEmailFormControl: AbstractControl;\n  sigInPasswordFormControl: AbstractControl;\n\n  sigUpNameFormControl: AbstractControl;\n  sigUpEmailFormControl: AbstractControl;\n  sigUpPasswordFormControl: AbstractControl;\n  sigUpPasswordConfirmationFormControl: AbstractControl;\n  resetPasswordEmailFormControl: AbstractControl;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken))\n    public config: NgxAuthFirebaseUIConfig,\n    public auth: AngularFireAuth,\n    public authProcess: AuthProcessService,\n    public dialog: MatDialog,\n    private activatedRoute: ActivatedRoute,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? \"warn\" : \"primary\";\n  }\n\n  public ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(\n        () => (this.authenticationError = true)\n      );\n    }\n    this.min =\n      this.min != null\n        ? Math.max(this.min, this.config.passwordMinLength)\n        : this.config.passwordMinLength;\n    this.max =\n      this.max != null\n        ? Math.min(this.max, this.config.passwordMaxLength)\n        : this.config.passwordMaxLength;\n\n    this.goBackURL = this.chooseBackUrl();\n\n    this.updateAuthSnackbarMessages();\n    // auth form's initialization\n    this._initSignInFormGroupBuilder();\n    this._initSignUpFormGroupBuilder();\n    this._initResetPasswordFormGroupBuilder();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.passwordStrength) {\n      this.passwordStrength.onStrengthChanged.subscribe((strength: number) => {\n        this.onStrengthChanged.emit(strength);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.messageOnAuthSuccess || changes.messageOnAuthError) {\n      this.updateAuthSnackbarMessages();\n    }\n    if (changes.min) {\n      this.min =\n        this.min != null\n          ? Math.max(this.min, this.config.passwordMinLength)\n          : this.config.passwordMinLength;\n    }\n    if (changes.max) {\n      this.max =\n        this.max != null\n          ? Math.min(this.max, this.config.passwordMaxLength)\n          : this.config.passwordMaxLength;\n    }\n    if (changes.goBackURL) {\n      this.goBackURL = this.chooseBackUrl();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.onErrorSubscription) {\n      this.onErrorSubscription.unsubscribe();\n    }\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.selectedTabChange.emit(event);\n    this.tabIndex = event.index;\n  }\n\n  async signOut() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signOut();\n    } finally {\n      this.isLoading = false;\n      this.tabIndex = 0;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  async signIn() {\n    if (!this.signInFormGroup.valid) {\n      return;\n    }\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signInWith(this.authProviders.EmailAndPassword, {\n        email: this.signInFormGroup.value.email,\n        password: this.signInFormGroup.value.password,\n      });\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  updateAuthSnackbarMessages(): void {\n    this.authProcess.messageOnAuthSuccess = this.messageOnAuthSuccess;\n    this.authProcess.messageOnAuthError = this.messageOnAuthError;\n  }\n\n  createForgotPasswordTab() {\n    this.passwordResetWished = true;\n    this.tabIndex = 2;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  processLegalSignUP(authProvider?: AuthProvider) {\n    if (this.tosUrl || this.privacyPolicyUrl) {\n      const params: LegalityDialogParams = {\n        tosUrl: this.tosUrl,\n        privacyPolicyUrl: this.privacyPolicyUrl,\n        authProvider,\n      };\n\n      this.dialogRef = this.dialog.open(LegalityDialogComponent, {\n        data: params,\n      });\n      this.dialogRef.afterClosed().subscribe((result: LegalityDialogResult) => {\n        if (result && result.checked) {\n          this._afterSignUpMiddleware(result.authProvider).then(() =>\n            this.signUpFormGroup.reset()\n          );\n        }\n        this.dialogRef = null;\n      });\n    } else {\n      this._afterSignUpMiddleware(authProvider).then(() =>\n        this.signUpFormGroup.reset()\n      );\n    }\n  }\n\n  async signUp() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      return await this.authProcess.signUp(this.signUpFormGroup.value.name, {\n        email: this.signUpFormGroup.value.email,\n        password: this.signUpFormGroup.value.password,\n      });\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  async signUpAnonymously() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signInWith(this.authProvider.ANONYMOUS);\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  resetPassword() {\n    this.authProcess\n      .resetPassword(this.resetPasswordEmailFormControl.value)\n      .then(() => {\n        this.passReset = true;\n        // this.tabIndex = 2;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  private chooseBackUrl() {\n    return (\n      this.activatedRoute.snapshot.queryParams.redirectUrl ||\n      this.goBackURL ||\n      \"/\"\n    );\n  }\n\n  private _initSignInFormGroupBuilder() {\n    this.signInFormGroup = new FormGroup({});\n    this.signInFormGroup.registerControl(\n      \"email\",\n      (this.signInEmailFormControl = new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(EMAIL_REGEX),\n      ]))\n    );\n    this.signInFormGroup.registerControl(\n      \"password\",\n      (this.sigInPasswordFormControl = new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(this.min),\n        Validators.maxLength(this.max),\n      ]))\n    );\n  }\n\n  private _initSignUpFormGroupBuilder() {\n    this.signUpFormGroup = new FormGroup({\n      name: this.sigUpNameFormControl = new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(this.config.nameMinLength),\n        Validators.maxLength(this.config.nameMaxLength),\n      ]),\n      email: this.sigUpEmailFormControl = new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(EMAIL_REGEX),\n      ]),\n      password: this.sigUpPasswordFormControl = new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(this.min),\n        Validators.maxLength(this.max),\n      ]),\n    });\n  }\n\n  private _initResetPasswordFormGroupBuilder() {\n    this.resetPasswordFormGroup = new FormGroup({\n      email: this.resetPasswordEmailFormControl = new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(EMAIL_REGEX),\n      ]),\n    });\n  }\n\n  private _afterSignUpMiddleware(authProvider?: AuthProvider) {\n    if (authProvider === this.authProvider.ANONYMOUS) {\n      return this.signUpAnonymously();\n    }\n    return this.signUp();\n  }\n}\n","<button *ngIf=\"user\"\n        class=\"ngx-auth-firebaseui-avatar-button\"\n        [matMenuTriggerFor]=\"posXMenu\"\n        [matTooltip]=\"user?.displayName\"\n        [style.background-image]=\"'url(' + user?.photoURL + ')'\"\n        aria-label=\"Open x-positioned menu\"\n        mat-mini-fab\n        style=\"background-size: cover\">\n  <span *ngIf=\"!user?.photoURL\">{{displayNameInitials || ''}}</span>\n</button>\n\n<mat-menu #posXMenu=\"matMenu\" class=\"before ngx-auth-firebaseui-avatar-menu\" xPosition=\"before\" >\n  <div fxLayout=\"row\" fxLayout.xs=\"column\" style=\"padding-left: 10px; padding-right: 10px\" [ngStyle]=\"{ 'padding-top.px': layout === 'default' ? 0 : 10 }\">\n    <button [style.background-image]=\"user?.photoURL ? 'url(' + user?.photoURL + ')' : ''\"\n            mat-fab\n            style=\"background-size: cover\"\n            *ngIf=\"layout === 'default'\">\n      <span *ngIf=\"!user?.photoURL\">{{displayNameInitials || ''}}</span>\n    </button>\n    <div fxLayout=\"column\" style=\"padding-left: 10px; padding-right: 10px\">\n      <strong mat-card-title>{{user?.displayName}}</strong>\n      <em mat-card-subtitle style=\"font-style: italic\">{{user?.email}}</em>\n    </div>\n  </div>\n\n  <div fxFlex=\"100\" fxLayout=\"column\" [ngStyle]=\"{ 'padding-bottom.px': layout === 'default' ? 0 : 10 } \">\n    <div *ngFor=\"let menuItem of links\" class=\"links-menu\">\n      <button (click)=\"menuItem?.callback()\" mat-menu-item>\n        <mat-icon>{{menuItem?.icon}}</mat-icon>\n        {{menuItem?.text}}</button>\n    </div>\n    <button *ngIf=\"canViewAccount\" (click)=\"openProfile()\" color=\"primary\" fxLayoutAlign=\"center\" mat-raised-button>{{ textProfile }}\n    </button>\n    <button (click)=\"signOut()\" *ngIf=\"canLogout\" color=\"warn\" fxLayoutAlign=\"center\" mat-raised-button>{{ textSignOut }}\n    </button>\n  </div>\n</mat-menu>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/compat/auth\";\nimport firebase from \"firebase/compat/app\";\nimport { Observable } from \"rxjs\";\nimport { take } from 'rxjs/operators';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserComponent } from \"..\";\nimport { AuthProcessService } from \"../../services/auth-process.service\";\n\nexport interface LinkMenuItem {\n  text: string;\n  icon?: string;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function;\n}\n\n@Component({\n  selector: \"ngx-auth-firebaseui-avatar\",\n  templateUrl: \"./ngx-auth-firebaseui-avatar.component.html\",\n  styleUrls: [\"./ngx-auth-firebaseui-avatar.component.scss\"],\n})\nexport class NgxAuthFirebaseuiAvatarComponent implements OnInit {\n  @Input()\n  layout: \"default\" | \"simple\" = \"default\";\n\n  @Input()\n  canLogout = true;\n\n  @Input()\n  links: LinkMenuItem[];\n\n  @Input()\n  canViewAccount = true;\n\n  @Input()\n  canDeleteAccount = true;\n\n  @Input()\n  canEditAccount = true;\n\n  @Input()\n  textProfile = \"Profile\";\n\n  @Input()\n  textSignOut = \"Sign Out\";\n\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output()\n  onSignOut: EventEmitter<void> = new EventEmitter();\n\n  user: firebase.User;\n  user$: Observable<firebase.User | null>;\n  displayNameInitials: string | null;\n\n  constructor(public afa: AngularFireAuth, public dialog: MatDialog, private authProcess: AuthProcessService) {}\n\n  ngOnInit() {\n    this.user$ = this.afa.user;\n    this.user$.subscribe((user: firebase.User) => {\n      this.user = user;\n      this.displayNameInitials = user\n        ? this.getDisplayNameInitials(user.displayName)\n        : null;\n    });\n  }\n\n  getDisplayNameInitials(displayName: string | null): string | null {\n    if (!displayName) {\n      return null;\n    }\n    const initialsRegExp: RegExpMatchArray = displayName.match(/\\b\\w/g) || [];\n    const initials = (\n      (initialsRegExp.shift() || \"\") + (initialsRegExp.pop() || \"\")\n    ).toUpperCase();\n    return initials;\n  }\n\n  openProfile() {\n    const dialogRef = this.dialog.open(UserComponent);\n    const instance = dialogRef.componentInstance;\n    instance.canDeleteAccount = this.canDeleteAccount;\n    instance.canEditAccount = this.canEditAccount;\n    instance\n    .onSignOut\n    .pipe(\n      take(1)\n      ).subscribe(_ => this.onSignOut.emit()); // propagate the onSignout event\n    instance\n    .onAccountEdited\n    .pipe(\n      take(1)\n    ).subscribe(_ => this.displayNameInitials = this.getDisplayNameInitials(this.authProcess.user.displayName)) // update display name initials?\n  }\n\n  async signOut() {\n    try {\n      await this.afa.signOut();\n      // Sign-out successful.\n      this.onSignOut.emit();\n    } catch (e) {\n      // An error happened.\n      console.error(\"An error happened while signing out!\", e);\n    }\n  }\n}\n","<div fxLayout=\"column\" id=\"login\">\n\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" id=\"login-form-wrapper\">\n\n    <div [@animateStagger]=\"{ value: '50' }\" id=\"login-form\">\n\n      <div *ngIf=\"logoUrl\" class=\"logo\">\n        <img [@animate]=\"{ value: '*', params: { x: '50px' } }\" [src]=\"logoUrl\" alt=\"logo\">\n      </div>\n\n      <div [@animate]=\"{ value: '*', params: { x: '-50px' } }\" class=\"title\">{{titleText}}</div>\n\n      <form [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\" [formGroup]=\"loginForm\" name=\"loginForm\"\n            novalidate>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"emailText\" formControlName=\"email\" matInput autocomplete=\"username\">\n          <mat-icon [color]=\"color\" matSuffix>email</mat-icon>\n          <mat-error *ngIf=\"loginForm.get('email')?.hasError('required')\">\n            {{emailErrorRequiredText}}\n          </mat-error>\n          <mat-error\n            *ngIf=\"!loginForm.get('email')?.hasError('required') &&\n                                loginForm.get('email')?.hasError('email')\">\n            {{emailErrorPatternText}}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"passwordText\" formControlName=\"password\" matInput type=\"password\" autocomplete=\"current-password\">\n          <mat-icon [color]=\"color\" matSuffix>lock</mat-icon>\n          <mat-error>\n            {{passwordErrorRequiredText}}\n          </mat-error>\n        </mat-form-field>\n\n        <div [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n             class=\"remember-forgot-password\" fxLayout=\"row\"\n             fxLayout.xs=\"column\"\n             fxLayoutAlign=\"space-between center\">\n          <!--          <mat-checkbox class=\"remember-me\" aria-label=\"Remember Me\">-->\n          <!--            {{rememberMeText}}-->\n          <!--          </mat-checkbox>-->\n\n          <button (click)=\"onResetPasswordRequested.emit()\"\n                  *ngIf=\"resetPasswordEnabled\"\n                  [@animate]=\"{ value: '*', params: { x: '-50px' } }\"\n                  [color]=\"color\"\n                  class=\"forgot-password\"\n                  mat-button\n                  type=\"button\">\n            {{forgotPasswordText}}\n          </button>\n        </div>\n\n        <button (click)=\"login()\"\n                [color]=\"colorAccent\"\n                [disabled]=\"loginForm.invalid\"\n                aria-label=\"LOG IN\"\n                class=\"submit-button\"\n                id=\"loginButton\"\n                mat-raised-button>\n          {{loginButtonText}}\n        </button>\n\n      </form>\n\n      <div *ngIf=\"providers.length > 0\"\n           [@animate]=\"{ value: '*', params: { z: '50px', delay: '50ms', scale: '0.2' } }\"\n           class=\"separator\">\n        <span class=\"text\">{{orLabelText}}</span>\n      </div>\n\n      <ngx-auth-firebaseui-providers [providers]=\"providers\"\n                                     fxLayoutAlign=\"center center\"\n                                     layout=\"column\"\n                                     theme=\"raised\"></ngx-auth-firebaseui-providers>\n\n      <div *ngIf=\"registrationEnabled\"\n           [@animateStagger]=\"{ value: '100' }\"\n           class=\"register\"\n           fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <span [@animate]=\"{ value: '*', params: { x: '100px' } }\" class=\"text\">\n          {{dontHaveAnAccountText}}\n        </span>\n        <button (click)=\"onCreateAccountRequested.emit()\"\n                [@animate]=\"{ value: '*', params: { x: '-100px' } }\"\n                [color]=\"color\"\n                id=\"createAccountButton\"\n                mat-button\n                type=\"button\">{{createAccountButtonText}}</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, Inject, Input, OnInit, Output, PLATFORM_ID, ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {Subscription} from 'rxjs';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {isPlatformBrowser} from '@angular/common';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {ThemePalette} from '@angular/material/core';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-login',\n  templateUrl: './ngx-auth-firebaseui-login.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-login.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class NgxAuthFirebaseuiLoginComponent implements OnInit {\n\n  @Input() logoUrl: string;\n  @Input() providers: string[] | string = AuthProvider.ALL; //  google, facebook, twitter, github as array or all as one single string\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() registrationEnabled = true;\n  @Input() resetPasswordEnabled = true;\n  @Input() messageOnAuthSuccess: string;\n  @Input() messageOnAuthError: string;\n\n  // i18n\n  @Input() titleText = 'LOGIN TO YOUR ACCOUNT';\n  @Input() rememberMeText = 'Remember Me';\n  @Input() loginButtonText = 'LOGIN';\n  @Input() orLabelText = 'OR';\n  @Input() forgotPasswordText = 'Forgot Password?';\n  @Input() dontHaveAnAccountText = 'Don\\'t have an account?';\n  @Input() createAccountButtonText = 'Create an account';\n\n  // i18n email\n  @Input() emailText = 'Email';\n  @Input() emailErrorRequiredText = 'Email is required';\n  @Input() emailErrorPatternText = 'Please enter a valid email address';\n\n  // i18n password\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n\n  // Events\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onSuccess: any;\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onError: any;\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onCreateAccountRequested: EventEmitter<void> = new EventEmitter<void>();\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onResetPasswordRequested: EventEmitter<void> = new EventEmitter<void>();\n\n  @Output() onLoginButtonClicked: EventEmitter<void> = new EventEmitter<void>();\n\n  loginForm: FormGroup;\n  authProviders = AuthProvider;\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public authProcess: AuthProcessService,\n    private formBuilder: FormBuilder) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  get colorAccent(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'accent';\n  }\n\n  ngOnInit() {\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n\n    this.updateAuthSnackbarMessages();\n\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  public updateAuthSnackbarMessages(): void {\n    this.authProcess.messageOnAuthSuccess = this.messageOnAuthSuccess;\n    this.authProcess.messageOnAuthError = this.messageOnAuthError;\n  }\n\n  async login() {\n    // Emit event for button click\n    this.onLoginButtonClicked.emit();\n\n    return await this.authProcess.signInWith(this.authProviders.EmailAndPassword,\n      {\n        email: this.loginForm.controls.email.value,\n        password: this.loginForm.controls.password.value\n      }\n    );\n  }\n}\n","<div fxLayout=\"column\" id=\"register\">\n\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" id=\"register-form-wrapper\">\n\n    <div [@animateStagger]=\"{ value: '50' }\" id=\"register-form\">\n\n      <div *ngIf=\"logoUrl\" class=\"logo\">\n        <img [@animate]=\"{ value: '*', params: { x: '50px' } }\" [src]=\"logoUrl\" alt=\"logo\">\n      </div>\n\n      <div [@animate]=\"{ value: '*', params: { x: '-50px' } }\" class=\"title\">{{titleText}}</div>\n\n      <form [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\" [formGroup]=\"registerForm\" name=\"registerForm\"\n            novalidate>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"nameText\" formControlName=\"name\" matInput/>\n          <mat-icon [color]=\"color\" matSuffix>person</mat-icon>\n          <mat-error>\n            {{nameErrorRequiredText}}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"emailText\" formControlName=\"email\" matInput autocomplete=\"username\"/>\n          <mat-icon [color]=\"color\" matSuffix>email</mat-icon>\n          <mat-error *ngIf=\"registerForm.get('email')?.hasError('required')\">\n            {{emailErrorRequiredText}}\n          </mat-error>\n          <mat-error *ngIf=\"registerForm.get('email')?.hasError('email')\">\n            {{emailErrorPatternText}}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"passwordText\" formControlName=\"password\" matInput type=\"password\" autocomplete=\"new-password\"/>\n          <mat-icon [color]=\"color\" matSuffix>lock</mat-icon>\n          <mat-error  *ngIf=\"registerForm.get('password')?.hasError('required')\">\n            {{passwordErrorRequiredText}}\n          </mat-error>\n          <mat-error  *ngIf=\"registerForm.get('password')?.hasError('minlength')\">\n            {{ passwordErrorMinLengthText }}\n          </mat-error>\n          <mat-error  *ngIf=\"registerForm.get('password')?.hasError('maxlength')\">\n            {{ passwordErrorMaxLengthText }}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"passwordConfirmationText\" formControlName=\"passwordConfirm\" matInput type=\"password\" autocomplete=\"new-password\"/>\n          <mat-icon [color]=\"color\" matSuffix>lock</mat-icon>\n          <mat-error *ngIf=\"registerForm.get('passwordConfirm')?.hasError('required')\">\n            {{passwordConfirmationErrorRequiredText}}\n          </mat-error>\n          <mat-error\n            *ngIf=\"\n              !registerForm.get('passwordConfirm')?.hasError('required') &&\n              registerForm.get('passwordConfirm')?.hasError('passwordsNotMatching')\n            \">\n            {{passwordErrorMatchText}}\n          </mat-error>\n        </mat-form-field>\n\n        <div *ngIf=\"this.tosUrl\">\n          <mat-checkbox aria-label=\"{{termsAndConditionsText}}\" formControlName=\"tos\" required>\n            <span>{{termsAndConditionsText}}</span>\n            <a target=\"_blank\" [href]=\"this.tosUrl\">\n                {{termsAndConditionsLinkText}}\n            </a>\n          </mat-checkbox>\n        </div>\n\n        <div *ngIf=\"this.privacyPolicyUrl\">\n          <mat-checkbox aria-label=\"{{privacyPolicyText}}\" formControlName=\"privacyPolicy\" required>\n            <span>{{privacyPolicyText}}</span>\n            <a target=\"_blank\" [href]=\"this.privacyPolicyUrl\">\n                {{privacyPolicyLinkText}}\n            </a>\n          </mat-checkbox>\n        </div>\n\n        <button (click)=\"createAccount()\"\n                [color]=\"colorAccent\"\n                [disabled]=\"registerForm.invalid\"\n                aria-label=\"CREATE AN ACCOUNT\"\n                class=\"submit-button\"\n                id=\"createAccountButton\"\n                mat-raised-button>\n          {{createAccountButtonText}}\n        </button>\n      </form>\n\n      <div [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\" class=\"register\" fxLayout=\"column\"\n           fxLayoutAlign=\"center center\">\n        <span [@animate]=\"{ value: '*', params: { x: '100px' } }\" class=\"text\">\n          {{alreadyHaveAccountText}}\n        </span>\n        <button (click)=\"onLoginRequested.emit()\"\n                [@animate]=\"{ value: '*', params: { x: '-100px' } }\"\n                [color]=\"colorAccent\"\n                id=\"loginButton\"\n                mat-button\n                type=\"button\">\n          {{loginButtonText}}\n        </button>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, forwardRef, Inject, Input, OnDestroy, OnInit, Output, PLATFORM_ID, ViewEncapsulation} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\nimport {Subject, Subscription} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {AuthProcessService} from '../../services/auth-process.service';\nimport {isPlatformBrowser} from '@angular/common';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {ThemePalette} from '@angular/material/core';\nimport { NgxAuthFirebaseUIConfigToken } from '../../tokens';\nimport { NgxAuthFirebaseUIConfig } from '../../interfaces';\n\nexport const confirmPasswordValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  if (!control.parent || !control) {\n    return null;\n  }\n\n  const password = control.parent.get('password');\n  const passwordConfirm = control.parent.get('passwordConfirm');\n\n  if (!password || !passwordConfirm) {\n    return null;\n  }\n\n  if (passwordConfirm.value === '') {\n    return null;\n  }\n\n  if (password.value === passwordConfirm.value) {\n    return null;\n  }\n\n  return {passwordsNotMatching: true};\n};\n\n@Component({\n  selector: 'ngx-auth-firebaseui-register',\n  templateUrl: './ngx-auth-firebaseui-register.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-register.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class NgxAuthFirebaseuiRegisterComponent implements OnInit, OnDestroy {\n\n  @Input() logoUrl: string;\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n\n  // i18n common\n  @Input() titleText = 'CREATE AN ACCOUNT';\n  @Input() termsAndConditionsText = 'I read and accept the';\n  @Input() termsAndConditionsLinkText = 'terms and conditions';\n  @Input() privacyPolicyText = 'I read and accept the';\n  @Input() privacyPolicyLinkText = 'privacy policy';\n  @Input() createAccountButtonText = 'CREATE AN ACCOUNT';\n  @Input() alreadyHaveAccountText = 'Already have an account?';\n  @Input() loginButtonText = 'LOGIN';\n\n  // i18n name\n  @Input() nameText = 'Name';\n  @Input() nameErrorRequiredText = 'Name is required';\n\n  // i18n email\n  @Input() emailText = 'Email';\n  @Input() emailErrorRequiredText = 'Email is required';\n  @Input() emailErrorPatternText = 'Please enter a valid email address';\n\n  // i18n password\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n  @Input() passwordConfirmationText = 'Password Confirmation';\n  @Input() passwordConfirmationErrorRequiredText = 'Password confirmation is required';\n  @Input() passwordErrorMatchText = 'Password must match'; \n  @Input() passwordErrorMinLengthText = \"The password is too short!\";\n  @Input() passwordErrorMaxLengthText = \"The password is too long!\";\n\n  // Events\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onSuccess: any;\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onError: any;\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onLoginRequested: EventEmitter<void> = new EventEmitter<void>();\n\n  @Output() onCreateAccountButtonClicked: EventEmitter<void> = new EventEmitter();\n\n  registerForm: FormGroup;\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  // Private\n  private unsubscribeAll: Subject<any>;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken))\n    public config: NgxAuthFirebaseUIConfig,\n    private formBuilder: FormBuilder,\n    public authProcess: AuthProcessService\n  ) {\n    // Configure the layout\n\n    // Set the private defaults\n    this.unsubscribeAll = new Subject();\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  get colorAccent(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'accent';\n  }\n\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required,\n                     Validators.minLength(this.config.passwordMinLength), \n                     Validators.maxLength(this.config.passwordMaxLength)]],\n      passwordConfirm: ['', [Validators.required, confirmPasswordValidator]],\n      tos: [''],\n      privacyPolicy: ['']\n    });\n\n    // If tos or privacy policy url set, ensure that the two form items are required\n    if (this.tosUrl) {\n      this.registerForm.controls.tos.setValidators(Validators.requiredTrue);\n    }\n\n    if (this.privacyPolicyUrl) {\n      this.registerForm.controls.privacyPolicy.setValidators(Validators.requiredTrue);\n    }\n\n    // Update the validity of the 'passwordConfirm' field\n    // when the 'password' field changes\n    this.registerForm\n      .controls\n      .password\n      .valueChanges.pipe(takeUntil(this.unsubscribeAll))\n      .subscribe(() => {\n        this.registerForm.controls.passwordConfirm.updateValueAndValidity();\n      });\n  }\n\n  /**\n   * On destroy\n   */\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this.unsubscribeAll.next();\n    this.unsubscribeAll.complete();\n  }\n\n  async createAccount() {\n    // Emit the create account clicked event.\n    this.onCreateAccountButtonClicked.emit();\n\n\n    return await this.authProcess.signUp(\n      this.registerForm.controls.name.value,\n      {\n        email: this.registerForm.controls.email.value,\n        password: this.registerForm.controls.password.value\n      }\n    );\n  }\n}\n","<div *ngIf=\"auth.authState| async; then authenticated else none\">\n\n</div>\n\n<ng-template #authenticated>\n  <mat-card *ngIf=\"auth.user | async as user\">\n    <!--<form [formGroup]=\"updateFormGroup\" >-->\n    <!--card header-->\n    <mat-card-header fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n      <img *ngIf=\"authProcess?.getUserPhotoUrl() | async as photoUrl\" [src]=\"photoUrl\" mat-card-avatar>\n\n      <div *ngIf=\"user.emailVerified; then emailVerified else emailNotVerified\"></div>\n      <ng-template #emailVerified>\n        <mat-icon color=\"primary\"\n                  [matTooltip]=\"emailVerifiedText\"\n                  matTooltipPosition=\"after\">\n          verified_user\n        </mat-icon>\n      </ng-template>\n      <ng-template #emailNotVerified>\n        <mat-icon color=\"warn\"\n                  [matTooltip]=\"emailNotVerifiedText\"\n                  matTooltipPosition=\"after\">\n          warning\n        </mat-icon>\n      </ng-template>\n\n    </mat-card-header>\n\n    <!--card content-->\n    <mat-card-content *ngIf=\"editMode; then edit else readonly\">\n    </mat-card-content>\n\n    <ng-template #edit>\n      <form (submit)=\"save()\" [formGroup]=\"updateFormGroup\">\n\n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <div fxLayoutAlign=\"center\">\n            <button (click)=\"changeEditMode()\" class=\"edit-button\" color=\"warn\"\n                    mat-raised-button>\n              {{cancelButtonText}}\n            </button>\n          </div>\n\n          <!--name-->\n          <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\n            <mat-label>{{nameText}}</mat-label>\n            <input [formControl]=\"updateNameFormControl\"\n                   matInput\n                   [placeholder]=\"nameText\">\n            <mat-icon matSuffix>person</mat-icon>\n            <mat-hint align=\"end\" aria-live=\"polite\"> {{ updateNameFormControl.value?.length }}\n              / {{ config.nameMaxLength }} </mat-hint>\n            <mat-error *ngIf=\"updateNameFormControl.hasError('required')\">\n              {{nameErrorRequiredText}}\n            </mat-error>\n          </mat-form-field>\n\n          <!--email-->\n          <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\n            <mat-label>{{emailText}}</mat-label>\n            <input [formControl]=\"updateEmailFormControl\"\n                   matInput\n                   [placeholder]=\"emailText\">\n            <mat-icon matSuffix>email</mat-icon>\n            <mat-error *ngIf=\"updateEmailFormControl.hasError('required')\">\n              {{emailErrorRequiredText}} {{updateEmailFormControl.value}}\n            </mat-error>\n            <mat-error *ngIf=\"updateEmailFormControl.hasError('pattern')\">\n              {{emailErrorPatternText}} {{updateEmailFormControl.value}}\n            </mat-error>\n          </mat-form-field>\n\n          <!--phone number-->\n          <mat-form-field *ngIf=\"false\" [appearance]=\"appearance\" class=\"full-width\">\n            <mat-label>{{phoneText}}</mat-label>\n            <input [formControl]=\"updatePhoneNumberFormControl\"\n                   matInput\n                   [placeholder]=\"phoneText\"\n                   type=\"tel\">\n            <mat-icon matSuffix>phone</mat-icon>\n            <mat-hint align=\"end\" aria-live=\"polite\">\n              {{phoneHintText}}\n            </mat-hint>\n            <mat-error *ngIf=\"updatePhoneNumberFormControl.hasError('pattern')\">\n              {{phoneErrorPatternText}}\n            </mat-error>\n          </mat-form-field>\n\n        </mat-card-content>\n\n        <mat-card-actions fxLayout=\"column\">\n          <button color=\"primary\"\n                  mat-button\n                  type=\"submit\">\n            {{saveChangesButtonText}}\n          </button>\n        </mat-card-actions>\n      </form>\n    </ng-template>\n\n    <ng-template #readonly>\n      <div fxLayoutAlign=\"center\">\n        <button *ngIf=\"canEditAccount\" (click)=\"changeEditMode()\" class=\"edit-button\" color=\"primary\"\n                mat-raised-button>\n          {{editButtonText}}\n        </button>\n      </div>\n\n      <!--name-->\n      <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\n        <mat-label>{{nameText}}</mat-label>\n        <input [disabled]=\"!editMode\"\n               [value]=\"user.displayName\"\n               matInput\n               [placeholder]=\"nameText\">\n        <mat-icon color=\"primary\" matSuffix>person</mat-icon>\n      </mat-form-field>\n\n      <!--email-->\n      <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\n        <mat-label>{{emailText}}</mat-label>\n        <input [disabled]=\"!editMode\"\n               [value]=\"user.email\" matInput\n               [placeholder]=\"emailText\">\n        <mat-icon color=\"primary\" matSuffix>email</mat-icon>\n      </mat-form-field>\n\n      <!--phone number-->\n      <mat-form-field *ngIf=\"false\" [appearance]=\"appearance\" class=\"full-width\">\n        <mat-label>{{phoneText}}</mat-label>\n        <input [disabled]=\"!editMode\"\n               [value]=\"user.phoneNumber\"\n               matInput\n               [placeholder]=\"phoneText\">\n        <mat-icon color=\"primary\" matSuffix>phone</mat-icon>\n      </mat-form-field>\n\n      <mat-card-actions fxLayout=\"column\">\n        <button (click)=\"signOut()\" *ngIf=\"canLogout\" color=\"primary\" mat-button>{{signoutButtonText}}</button>\n        <button (click)=\"deleteAccount()\" *ngIf=\"canDeleteAccount\" color=\"warn\" mat-button>{{deleteAccountButtonText}}</button>\n      </mat-card-actions>\n\n    </ng-template>\n\n  </mat-card>\n\n</ng-template>\n\n\n<ng-template #none>\n  <mat-card class=\"none-card\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <mat-icon color=\"accent\">warning</mat-icon>\n      <span>{{notLoggedInText}}</span>\n    </mat-card-content>\n  </mat-card>\n</ng-template>\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Output,\n} from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/compat/auth\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport firebase from \"firebase/compat/app\";\nimport { EMAIL_REGEX, PHONE_NUMBER_REGEX } from \"..\";\nimport { MatFormFieldAppearance } from \"@angular/material/form-field\";\nimport { NgxAuthFirebaseUIConfigToken } from \"../../tokens\";\nimport { NgxAuthFirebaseUIConfig } from \"../../interfaces\";\nimport { AuthProcessService } from \"../../services/auth-process.service\";\nimport { FirestoreSyncService } from \"../../services/firestore-sync.service\";\nimport { map, take } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n  selector: \"ngx-auth-firebaseui-user\",\n  templateUrl: \"./user.component.html\",\n  styleUrls: [\"./user.component.scss\"],\n})\nexport class UserComponent {\n  @Input() editMode: boolean;\n  @Input() canLogout = true;\n  @Input() canEditAccount = true;\n  @Input() canDeleteAccount = true;\n  @Input() appearance: MatFormFieldAppearance;\n\n  // i18n commons\n  @Input() notLoggedInText = \"You are not logged in!\";\n  @Input() emailVerifiedText = \"email is verified\";\n  @Input() emailNotVerifiedText = \"email is not verified\";\n  @Input() cancelButtonText = \"cancel\";\n  @Input() saveChangesButtonText = \"Save changes\";\n  @Input() editButtonText = \"edit\";\n  @Input() signoutButtonText = \"Sign out\";\n  @Input() deleteAccountButtonText = \"Delete account\";\n\n  //i18n name\n  @Input() nameText = \"Name\";\n  @Input() nameErrorRequiredText = \"Name is required\";\n\n  // i18n email\n  @Input() emailText = \"Email\";\n  @Input() emailErrorRequiredText = \"Email is required\";\n  @Input() emailErrorPatternText = \"Please enter a valid email address\";\n\n  // i18n phone\n  @Input() phoneText = \"Phone number\";\n  @Input() phoneHintText = `\n    The phone number is international. Therefore, it should start with a + sign or 00,\n    followed by the country code, - and national number e.g: +49-12345678 or 0041-1234567890\n\n      NOTE : the phone number must be a valid phone credential !!`;\n  @Input() phoneErrorPatternText = \"Please enter a valid phone number\";\n\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onSignOut: EventEmitter<void> = new EventEmitter();\n\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onAccountEdited: EventEmitter<void> = new EventEmitter();\n\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onAccountDeleted: EventEmitter<void> = new EventEmitter();\n\n  updateFormGroup: FormGroup;\n  updateNameFormControl: FormControl;\n  updateEmailFormControl: FormControl;\n  updatePhoneNumberFormControl: FormControl;\n\n  constructor(\n    public auth: AngularFireAuth,\n    public authProcess: AuthProcessService,\n    private fireStoreService: FirestoreSyncService,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken))\n    public config: NgxAuthFirebaseUIConfig\n  ) {}\n\n  changeEditMode() {\n    if (this.editMode) {\n      this.reset();\n      this.editMode = false;\n    } else {\n      this.initUpdateFormGroup().subscribe((updateFormGroup: FormGroup) => {\n        this.updateFormGroup = updateFormGroup;\n        this.editMode = true;\n      });\n    }\n  }\n\n  reset() {\n    this.updateFormGroup.reset();\n    this.updateFormGroup.disable();\n    this.updateFormGroup = null;\n  }\n\n  async save() {\n    if (this.updateFormGroup.dirty) {\n      this.editMode = false;\n      const user = this.authProcess.user;\n      // ngx-auth-firebaseui-user.updateProfile()\n      // ngx-auth-firebaseui-user.updateEmail()\n      // console.log('form = ', this.updateFormGroup);\n\n      const snackBarMsg: string[] = [];\n\n      try {\n        if (this.updateNameFormControl.dirty) {\n          await user.updateProfile({\n            displayName: this.updateNameFormControl.value,\n          });\n          snackBarMsg.push(`your name has been updated to ${user.displayName}`);\n        }\n\n        if (this.updateEmailFormControl.dirty) {\n          await user.updateEmail(this.updateEmailFormControl.value);\n          snackBarMsg.push(`your email has been updated to ${user.email}`);\n        }\n\n        if (this.updatePhoneNumberFormControl.dirty) {\n          await user.updatePhoneNumber(this.updatePhoneNumberFormControl.value);\n          console.log(\n            \"phone number = \",\n            this.updatePhoneNumberFormControl.value\n          );\n          snackBarMsg.push(\n            `your phone number has been updated to ${user.phoneNumber}`\n          );\n        }\n\n        if (this.config.enableFirestoreSync) {\n          await this.fireStoreService.updateUserData(\n            this.authProcess.parseUserInfo(user)\n          );\n        }\n      } catch (error) {\n        this.authProcess.showToast(\n          error && error.message ? error.message : error\n        );\n        console.error(error);\n      }\n\n      if (snackBarMsg.length > 0) {\n        this.authProcess.showToast(snackBarMsg.join(\"\\\\n\"));\n      }\n      this.onAccountEdited.emit(); // emit event if the form was dirty\n      this.updateFormGroup.reset();\n    }\n  }\n\n  signOut() {\n    this.auth\n      .signOut()\n      .then(() => this.onSignOut.emit())\n      .catch((e) => console.error(\"An error happened while signing out!\", e));\n  }\n\n  /**\n   * Delete the account of the current firebase ngx-auth-firebaseui-user\n   *\n   * On Success, emit the <onAccountDeleted> event and toast a msg!#\n   * Otherwise, log the and toast and error msg!\n   *\n   */\n  async deleteAccount() {\n    try {\n      const user = this.authProcess.user;\n\n      // await this.authProcess.deleteAccount();\n      await this.authProcess.user.delete();\n      // if (this.config.enableFirestoreSync) {\n      await this.fireStoreService.deleteUserData(user.uid);\n      // }\n      this.onAccountDeleted.emit();\n      this.editMode = false;\n      console.log(\"Your account has been successfully deleted!\");\n      this.authProcess.showToast(\"Your account has been successfully deleted!\");\n    } catch (error) {\n      console.log(\"Error while delete user account\", error);\n      this.authProcess.showToast(\n        `Error occurred while deleting your account: ${error.message}`\n      );\n    }\n  }\n\n  protected initUpdateFormGroup(): Observable<FormGroup> {\n    return this.authProcess.user$.pipe(\n      take(1),\n      map((currentUser: firebase.User) => {\n        const updateFormGroup = new FormGroup({\n          name: this.updateNameFormControl = new FormControl(\n            { value: currentUser.displayName, disabled: this.editMode },\n            [\n              Validators.required,\n              Validators.minLength(this.config.nameMinLength),\n              Validators.maxLength(this.config.nameMaxLength),\n            ]\n          ),\n\n          email: this.updateEmailFormControl = new FormControl(\n            { value: currentUser.email, disabled: this.editMode },\n            [Validators.required, Validators.pattern(EMAIL_REGEX)]\n          ),\n\n          phoneNumber: this.updatePhoneNumberFormControl = new FormControl(\n            { value: currentUser.phoneNumber, disabled: this.editMode },\n            [Validators.pattern(PHONE_NUMBER_REGEX)]\n          ),\n        });\n\n        updateFormGroup.enable();\n        return updateFormGroup;\n      })\n    );\n  }\n}\n","<div [@animateStagger]=\"{ value: '50' }\" [ngSwitch]=\"theme\">\n\n  <!--default icon buttons-->\n  <div *ngSwitchDefault\n       [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\"\n       [fxLayout]=\"layout\"\n       fxLayout.xs=\"column\">\n    <button (click)=\"processLegalSignUP(authProvider.Google)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            mat-button>\n      <mat-icon svgIcon=\"google-colored\"></mat-icon>\n      Google\n    </button>\n\n    <button (click)=\"processLegalSignUP(authProvider.Apple)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Apple)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"apple-filled\"\n            mat-button>\n      <mat-icon svgIcon=\"apple\"></mat-icon>\n      Apple\n    </button>\n\n    <button (click)=\"processLegalSignUP(authProvider.Facebook)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"facebook-filled\"\n            mat-button>\n      <mat-icon svgIcon=\"facebook\"></mat-icon>\n      Facebook\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Twitter)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"twitter-filled\"\n            mat-button>\n      <mat-icon svgIcon=\"twitter\"></mat-icon>\n      Twitter\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Github)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            mat-button>\n      <mat-icon svgIcon=\"github\"></mat-icon>\n      GitHub\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Microsoft)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            mat-button>\n      <mat-icon svgIcon=\"microsoft\"></mat-icon>\n      Microsoft\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Yahoo)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            mat-button>\n      <mat-icon svgIcon=\"yahoo\"></mat-icon>\n      Yahoo\n    </button>\n  </div>\n\n  <!--classic-->\n  <div *ngSwitchCase=\"themes.CLASSIC\"\n       [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\"\n       [fxLayout]=\"layout\"\n       class=\"buttons-classic\"\n       fxLayout.xs=\"column\">\n    <button (click)=\"processLegalSignUP(authProvider.Google)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"google-classic\"\n            mat-button>\n      Google\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Apple)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Apple)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"apple-classic\"\n            mat-button>\n      Apple\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Facebook)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"facebook-classic\"\n            mat-button>\n      Facebook\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Twitter)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"twitter-classic\"\n            mat-button>\n      Twitter\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Github)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"github-classic\"\n            mat-button>\n      GitHub\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Microsoft)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"microsoft-classic\"\n            mat-button>\n      Microsoft\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Yahoo)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"yahoo-classic\"\n            mat-button>\n      Yahoo\n    </button>\n  </div>\n\n  <!--stroked-->\n  <div *ngSwitchCase=\"themes.STROKED\"\n       [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\"\n       [fxLayout]=\"layout\"\n       class=\"buttons-classic\"\n       fxLayout.xs=\"column\">\n    <button (click)=\"processLegalSignUP(authProvider.Google)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"google-classic\"\n            mat-stroked-button>\n      Google\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Apple)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Apple)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"apple-classic\"\n            mat-stroked-button>\n      Apple\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Facebook)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"facebook-classic\"\n            mat-stroked-button>\n      Facebook\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Twitter)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"twitter-classic\"\n            mat-stroked-button>\n      Twitter\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Github)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"github-classic\"\n            mat-stroked-button>\n      GitHub\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Microsoft)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"microsoft-classic\"\n            mat-stroked-button>\n      Microsoft\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Yahoo)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"yahoo-classic\"\n            mat-stroked-button>\n      Yahoo\n    </button>\n  </div>\n\n  <!--raised-->\n  <div *ngSwitchCase=\"themes.RAISED\"\n       [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\"\n       [fxLayout]=\"layout\"\n       class=\"buttons-raised\"\n       fxLayout.xs=\"column\">\n    <button (click)=\"processLegalSignUP(authProvider.Google)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"google-raised\"\n            mat-raised-button>\n      Google\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Apple)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Apple)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"apple-raised\"\n            mat-raised-button>\n      Apple\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Facebook)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"facebook-raised\"\n            mat-raised-button>\n      Facebook\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Twitter)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"twitter-raised\"\n            mat-raised-button>\n      Twitter\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Github)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"github-raised\"\n            mat-raised-button>\n      GitHub\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Microsoft)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"microsoft-raised\"\n            mat-raised-button>\n      Microsoft\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Yahoo)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            [ngClass.xs]=\"{'space-full-xs':true}\"\n            class=\"yahoo-raised\"\n            mat-raised-button>\n      Yahoo\n    </button>\n  </div>\n\n  <!--fab-->\n  <div *ngSwitchCase=\"themes.FAB\"\n       [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\"\n       [fxLayout]=\"layout\"\n       class=\"buttons-raised\">\n    <button (click)=\"processLegalSignUP(authProvider.Google)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"google-raised\"\n            mat-fab>\n      <mat-icon svgIcon=\"google\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Apple)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Apple)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"apple-raised\"\n            mat-fab>\n      <mat-icon svgIcon=\"apple\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Facebook)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"facebook-raised\"\n            mat-fab>\n      <mat-icon svgIcon=\"facebook\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Twitter)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"twitter-raised\"\n            mat-fab>\n      <mat-icon svgIcon=\"twitter\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Github)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"github-raised\"\n            mat-fab>\n      <mat-icon svgIcon=\"github\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Microsoft)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"microsoft\"\n            mat-fab>\n      <mat-icon svgIcon=\"microsoft\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Yahoo)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"yahoo-raised\"\n            mat-fab>\n      <mat-icon svgIcon=\"yahoo\"></mat-icon>\n    </button>\n  </div>\n\n  <!--mini-fab-->\n  <div *ngSwitchCase=\"themes.MINI_FAB\"\n       [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\"\n       [fxLayout]=\"layout\"\n       class=\"buttons-raised\"\n       fxLayoutAlign.xs=\"center center\">\n    <button (click)=\"processLegalSignUP(authProvider.Google)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"google-raised\"\n            fxFlexAlign=\"center\"\n            mat-mini-fab>\n      <mat-icon svgIcon=\"google\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Apple)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Apple)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"apple-raised\"\n            mat-mini-fab>\n      <mat-icon svgIcon=\"apple\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Facebook)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"facebook-raised\"\n            mat-mini-fab>\n      <mat-icon svgIcon=\"facebook\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Twitter)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"twitter-raised\"\n            mat-mini-fab>\n      <mat-icon class=\"icon-white\" svgIcon=\"twitter\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Github)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"github-raised\"\n            mat-mini-fab>\n      <mat-icon svgIcon=\"github\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Microsoft)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"microsoft\"\n            mat-mini-fab>\n      <mat-icon svgIcon=\"microsoft\"></mat-icon>\n    </button>\n    <button (click)=\"processLegalSignUP(authProvider.Yahoo)\"\n            *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n            [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n            class=\"yahoo-raised\"\n            mat-mini-fab>\n      <mat-icon svgIcon=\"yahoo\"></mat-icon>\n    </button>\n  </div>\n</div>\n","import {Component, Input, Output} from '@angular/core';\nimport {AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {LegalityDialogComponent} from '..';\nimport {LegalityDialogParams, LegalityDialogResult} from '../../interfaces';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nexport enum Theme {\n  DEFAULT = 'default',\n  CLASSIC = 'classic',\n  STROKED = 'stroked',\n  FAB = 'fab',\n  MINI_FAB = 'mini-fab',\n  RAISED = 'raised',\n}\n\nexport enum Layout {\n  ROW = 'row',\n  COLUMN = 'column'\n}\n\n@Component({\n  selector: 'ngx-auth-firebaseui-providers',\n  templateUrl: 'auth.providers.component.html',\n  styleUrls: ['auth.providers.component.scss'],\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class AuthProvidersComponent {\n\n  @Input() theme: Theme; // theme: string = Theme.DEFAULT;\n  @Input() layout: string = Layout.ROW;\n  @Input() providers: AuthProvider[] | AuthProvider = AuthProvider.ALL; //  google, facebook, twitter, github, microsoft, yahoo\n\n  @Output() onSuccess: any;\n  @Output() onError: any;\n\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n  dialogRef: MatDialogRef<LegalityDialogComponent>;\n\n  themes = Theme;\n  authProvider = AuthProvider;\n\n  constructor(public authProcess: AuthProcessService, public dialog: MatDialog) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  processLegalSignUP(authProvider?: AuthProvider) {\n    if (this.tosUrl || this.privacyPolicyUrl) {\n      const params: LegalityDialogParams = {\n        tosUrl: this.tosUrl,\n        privacyPolicyUrl: this.privacyPolicyUrl,\n        authProvider\n      };\n\n      this.dialogRef = this.dialog.open(LegalityDialogComponent, {data: params});\n      this.dialogRef.afterClosed().subscribe((result: LegalityDialogResult) => {\n        if (result && result.checked) {\n          // this._afterSignUpMiddleware(result.authProvider).then(() => this.signUpFormGroup.reset());\n          this.authProcess.signInWith(authProvider);\n        }\n        this.dialogRef = null;\n      });\n    } else {\n      // this._afterSignUpMiddleware(authProvider).then(() => this.signUpFormGroup.reset());\n      this.authProcess.signInWith(authProvider);\n    }\n  }\n\n}\n","// import * as firebase from 'firebase';\n\nexport interface NgxAuthFirebaseUIConfig {\n  // authNextURL?: string, // popup or redirect\n  // tosUrl?: string, // term of services url\n  // ppUrl?: string, // privacy policy url\n  // authProviders?: Array<AuthProvider>,\n  // languageCode?: string, // todo: 28.3.18\n  authGuardFallbackURL?: string;\n  authGuardLoggedInURL?: string;\n  enableFirestoreSync?: boolean;\n\n  // Toasts\n  toastMessageOnAuthSuccess?: boolean;\n  toastMessageOnAuthError?: boolean;\n\n  // Password length min/max in forms independently of each componenet min/max.\n  // `min/max` input parameters in components should be within this range.\n  passwordMaxLength?: number;\n  passwordMinLength?: number;\n\n  // Same as password but for the name\n  nameMaxLength?: number;\n  nameMinLength?: number;\n\n  // If set, sign-in/up form is not available until email has been verified.\n  // Plus protected routes are still protected even though user is connected.\n  guardProtectedRoutesUntilEmailIsVerified?: boolean;\n\n  // Control whether or not email verification is used\n  enableEmailVerification?: boolean;\n\n  // If set to true outputs the UserCredential object instead of firebase.User after login and signup\n  useRawUserCredential?: boolean\n}\n\nexport const defaultAuthFirebaseUIConfig: NgxAuthFirebaseUIConfig = {\n  // authMethod: 'redirect',\n  // authProviders: [new GoogleAuthProvider(), new FacebookAuthProvider(), new TwitterAuthProvider(), new GithubAuthProvider()],\n  enableFirestoreSync: true,\n  toastMessageOnAuthSuccess: true,\n  toastMessageOnAuthError: true,\n  authGuardFallbackURL: '/',\n  authGuardLoggedInURL: '/',\n\n  // Password length min/max in forms independently of each componenet min/max.\n  // `min/max` input parameters in components should be within this range.\n  passwordMaxLength: 60,\n  passwordMinLength: 8,\n\n  // Same as password but for the name\n  nameMaxLength: 50,\n  nameMinLength: 2,\n\n  // If set, sign-in/up form is not available until email has been verified.\n  // Plus protected routes are still protected even though user is connected.\n  guardProtectedRoutesUntilEmailIsVerified: true,\n\n  // Default to email verification on\n  enableEmailVerification: true,\n\n  // Default to false to keep the current projects working as is\n  useRawUserCredential: false\n};\n\n// Merge default config with user provided config.\nexport function ngxAuthFirebaseUIConfigFactory(userProvidedConfig: NgxAuthFirebaseUIConfig): NgxAuthFirebaseUIConfig {\n  return Object.assign({}, defaultAuthFirebaseUIConfig, userProvidedConfig);\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {NgxAuthFirebaseUIConfig} from '../interfaces';\nimport {NgxAuthFirebaseUIConfigToken} from '../tokens';\nimport {AuthProcessService} from '../services/auth-process.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedInGuard implements CanActivate {\n  constructor(\n    @Inject(NgxAuthFirebaseUIConfigToken)\n    private config: NgxAuthFirebaseUIConfig,\n    private router: Router,\n    private authProcess: AuthProcessService\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.authProcess.afa.user.pipe(\n      map(user => {\n        if (user) {\n          if (this.config.guardProtectedRoutesUntilEmailIsVerified && !user.emailVerified && !user.isAnonymous) {\n            if (this.config.authGuardFallbackURL) {\n              this.router.navigate([`${this.config.authGuardFallbackURL}`], {queryParams: {redirectUrl: state.url}});\n            }\n            return false;\n          } else {\n            return true;\n          }\n        } else {\n          if (this.config.authGuardFallbackURL) {\n            this.router.navigate([`/${this.config.authGuardFallbackURL}`], {queryParams: {redirectUrl: state.url}});\n          }\n          return false;\n        }\n      })\n    );\n  }\n}\n","// @angular/*\nimport {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n// @angular/fire\nimport {FIREBASE_APP_NAME, FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { FirebaseOptions } from '@firebase/app-types';\nimport {AngularFireAuthModule} from '@angular/fire/compat/auth';\nimport {AngularFirestoreModule} from '@angular/fire/compat/firestore';\n// @angular/material\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule, MatIconRegistry} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {MatPasswordStrengthModule} from '@angular-material-extensions/password-strength';\n\n\nimport {NgxAuthFirebaseuiLoginComponent} from './components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component';\nimport {NgxAuthFirebaseuiRegisterComponent} from './components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component';\n\n\nimport {DomSanitizer} from '@angular/platform-browser';\n// ngx-auth-firebaseui\n// components\nimport {AuthComponent} from './components/ngx-auth-firebaseui/auth.component';\nimport {UserComponent} from './components/ngx-auth-firebaseui-user/user.component';\nimport {AuthProvidersComponent} from './components/providers/auth.providers.component';\nimport {EmailConfirmationComponent} from './components/email-confirmation/email-confirmation.component';\nimport {NgxAuthFirebaseUIConfig, ngxAuthFirebaseUIConfigFactory} from './interfaces/config.interface';\nimport {NgxAuthFirebaseuiAvatarComponent} from './components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component';\nimport {LegalityDialogComponent} from './components/legality-dialog/legality-dialog.component';\n// guards\nimport {LoggedInGuard} from './guards/logged-in.guard';\n// services\nimport {FirestoreSyncService} from './services/firestore-sync.service';\nimport {AuthProcessService} from './services/auth-process.service';\nimport {NgxAuthFirebaseUIConfigToken, UserProvidedConfigToken} from './tokens';\n// interfaces\n// ###################################################################################################\n// Export module's public API\n// components\nexport {LegalityDialogComponent} from './components/legality-dialog/legality-dialog.component';\nexport {LinkMenuItem, NgxAuthFirebaseuiAvatarComponent} from './components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component';\nexport {UserComponent} from './components/ngx-auth-firebaseui-user/user.component';\nexport {AuthComponent} from './components/ngx-auth-firebaseui/auth.component';\nexport {AuthProvidersComponent, Layout, Theme} from './components/providers/auth.providers.component';\nexport {NgxAuthFirebaseuiLoginComponent} from './components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component';\nexport {NgxAuthFirebaseuiRegisterComponent} from './components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component';\n\n\n// guards\nexport {LoggedInGuard} from './guards/logged-in.guard';\n// interfaces\nexport {NgxAuthFirebaseUIConfig} from './interfaces/config.interface';\n// services\nexport {AuthProcessService, AuthProvider} from './services/auth-process.service';\nexport {FirestoreSyncService} from './services/firestore-sync.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // HTTP\n    RouterModule,\n    HttpClientModule,\n    // FLEX_LAYOUT\n    FlexLayoutModule,\n    // FORMS\n    FormsModule,\n    ReactiveFormsModule,\n    // MATERIAL2\n    MatTabsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatMenuModule,\n    // ANGULAR MATERIAL EXTENSIONS\n    MatPasswordStrengthModule,\n    // ANGULARFIRE2\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n  ],\n  exports: [\n    AuthComponent,\n    UserComponent,\n    NgxAuthFirebaseuiAvatarComponent,\n    AuthProvidersComponent,\n    EmailConfirmationComponent,\n    // LoggedInGuard,\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    NgxAuthFirebaseuiLoginComponent,\n    NgxAuthFirebaseuiRegisterComponent\n  ],\n  declarations: [\n    AuthComponent,\n    UserComponent,\n    NgxAuthFirebaseuiAvatarComponent,\n    AuthProvidersComponent,\n    EmailConfirmationComponent,\n    LegalityDialogComponent,\n    NgxAuthFirebaseuiLoginComponent,\n    NgxAuthFirebaseuiRegisterComponent\n  ],\n  entryComponents: [\n    UserComponent,\n    LegalityDialogComponent\n  ]\n})\nexport class NgxAuthFirebaseUIModule {\n  constructor(private iconRegistry: MatIconRegistry, private sanitizer: DomSanitizer, auth: AuthProcessService) {\n    auth.listenToUserEvents();\n    this.registerProviderIcons();\n  }\n\n\n  static forRoot(\n    configFactory: FirebaseOptions,\n    appNameFactory: () => string | undefined = () => undefined,\n    config: NgxAuthFirebaseUIConfig = {}\n  ): ModuleWithProviders<NgxAuthFirebaseUIModule> {\n\n    return {\n      ngModule: NgxAuthFirebaseUIModule,\n      providers:\n        [\n          {\n            provide: FIREBASE_OPTIONS,\n            useValue: configFactory\n          },\n          {\n            provide: FIREBASE_APP_NAME,\n            useFactory: appNameFactory\n          },\n          {provide: UserProvidedConfigToken, useValue: config},\n          {\n            provide: NgxAuthFirebaseUIConfigToken,\n            useFactory: ngxAuthFirebaseUIConfigFactory,\n            deps: [UserProvidedConfigToken]\n          },\n          AuthProcessService,\n          FirestoreSyncService,\n          LoggedInGuard\n        ]\n    };\n  }\n\n  registerProviderIcons() {\n    this.iconRegistry\n      .addSvgIcon('google', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/google.svg'))\n      .addSvgIcon('apple', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/apple.svg'))\n      .addSvgIcon('google-colored', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/google.svg'))\n      .addSvgIcon('facebook', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/facebook.svg'))\n      .addSvgIcon('twitter', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/twitter.svg'))\n      .addSvgIcon('github', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/github-circle.svg'))\n      .addSvgIcon('microsoft', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/microsoft.svg'))\n      .addSvgIcon('yahoo', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/yahoo.svg'))\n      .addSvgIcon('phone', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/phone.svg'));\n  }\n}\n","/*\n * Public API Surface of ngx-auth-firebaseui\n */\n\nexport * from './lib/components';\nexport * from './lib/enums';\nexport * from './lib/interfaces';\nexport * from './lib/guards';\nexport * from './lib/tokens';\nexport * from './lib/services/auth-process.service';\nexport * from './lib/services/firestore-sync.service';\nexport * from './lib/ngx-auth-firebaseui.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}